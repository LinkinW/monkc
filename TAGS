
binary/monkc4bsd/monkc.h,5832
#define __MCRuntime____MCRuntime__29,1510
#define MC_HASHTABLE_SIZE_L1 MC_HASHTABLE_SIZE_L147,2064
#define MC_HASHTABLE_SIZE_L2 MC_HASHTABLE_SIZE_L248,2097
#define MC_HASHTABLE_SIZE_L3 MC_HASHTABLE_SIZE_L349,2130
#define MC_HASHTABLE_SIZE_L4 MC_HASHTABLE_SIZE_L450,2164
#define MC_HASHTABLE_SIZE_L5 MC_HASHTABLE_SIZE_L551,2198
#define MC_STRICT_MODE MC_STRICT_MODE60,2445
#define nil nil70,2684
#define xxx xxx72,2714
#define S(S73,2736
#define A_B(A_B74,2760
typedef struct mc_hashitem_structmc_hashitem_struct76,2787
	struct mc_hashitem_struct* next;next78,2823
	unsigned hash;hash79,2857
	unsigned index;index80,2873
	unsigned level;level81,2890
	void* value;value82,2907
	char* key;key84,2951
}mc_hashitem;mc_hashitem85,2963
typedef struct mc_hashtable_structmc_hashtable_struct87,2978
	int lock;lock89,3015
	unsigned level;level90,3026
	unsigned count;count91,3043
	mc_hashitem* items[];items92,3060
}mc_hashtable;mc_hashtable93,3083
typedef struct mc_block_structmc_block_struct95,3099
	struct mc_block_struct* next;next97,3132
	void* data;data98,3163
}mc_block;mc_block99,3176
typedef struct mc_blockpool_structmc_blockpool_struct101,3188
	int lock;lock103,3225
	mc_block* tail;tail104,3236
}mc_blockpool;mc_blockpool105,3253
typedef struct mc_class_structmc_class_struct108,3326
	size_t objsize;objsize110,3359
	mc_hashtable* table;table111,3376
	mc_blockpool* free_pool;free_pool112,3398
	mc_blockpool* used_pool;used_pool113,3424
	mc_hashitem* item;item114,3450
}mc_class;mc_class115,3470
typedef struct mc_object_structmc_object_struct118,3535
	struct mc_object_struct* super;super120,3569
	mc_class* isa;isa121,3602
	mc_block* block;block122,3618
	int ref_count;ref_count123,3636
	mc_class* saved_isa;saved_isa124,3652
	mc_class* mode;mode125,3674
}mc_object;mc_object126,3691
typedef mc_object* mo;mo127,3703
#define monkc(monkc129,3727
#define end(end138,3900
#define implements(implements143,4044
#define extends(extends144,4073
typedef mc_class* (*loaderFP)(mc_class*);loaderFP147,4131
typedef mc_object* (*initerFP)(mc_object*);initerFP148,4173
#define loader(loader151,4230
#define initer(initer152,4297
#define binding(binding155,4373
#define override(override156,4451
#define hinding(hinding157,4530
#define hverride(hverride158,4619
#define method(method159,4710
#define protocol(protocol160,4820
#define cast(cast161,4937
#define newc(newc164,4998
#define new(new165,5135
#define hew(hew166,5260
#define new_category(new_category167,5361
#define hew_category(hew_category168,5493
#define clear(clear169,5637
#define hlear(hlear170,5704
#define info(info171,5784
#define hnfo(hnfo172,5862
#define callc(callc175,5970
#define call(call176,6083
#define response_to(response_to177,6187
#define hesponse_to(hesponse_to178,6253
#define ffc(ffc179,6331
#define ff(ff180,6453
#define fh(fh181,6567
#define fs(fs182,6680
#define shift(shift183,6769
#define shift_back(shift_back184,6849
#define REFCOUNT_NO_MM REFCOUNT_NO_MM209,7832
#define REFCOUNT_ERR REFCOUNT_ERR210,7859
#define recycle(recycle214,7970
#define release(release215,8009
#define retain(retain216,8048
#define nameof(nameof226,8399
#define nameofc(nameofc227,8438
#define deref(deref228,8475
#define addrof(addrof229,8499
int LOG_LEVEL;LOG_LEVEL235,8540
#define MC_SILENT MC_SILENT237,8556
#define MC_ERROR_ONLY MC_ERROR_ONLY238,8580
#define MC_DEBUG MC_DEBUG239,8604
#define MC_VERBOSE MC_VERBOSE240,8628
#define LOG_COLOR_NONE LOG_COLOR_NONE243,8677
#define LOG_COLOR_BLACK LOG_COLOR_BLACK244,8710
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY245,8747
#define LOG_COLOR_BLUE LOG_COLOR_BLUE246,8788
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE247,8824
#define LOG_COLOR_GREEN LOG_COLOR_GREEN248,8866
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN249,8903
#define LOG_COLOR_CYAN LOG_COLOR_CYAN250,8946
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN251,8982
#define LOG_COLOR_RED LOG_COLOR_RED252,9024
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED253,9059
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE254,9100
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE255,9138
#define LOG_COLOR_BROWN LOG_COLOR_BROWN256,9182
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW257,9219
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY258,9257
#define LOG_COLOR_WHITE LOG_COLOR_WHITE259,9299
#define LOG_FMT LOG_FMT260,9336
#define LOG_COLOR_NONE LOG_COLOR_NONE262,9372
#define LOG_COLOR_BLACK LOG_COLOR_BLACK263,9398
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY264,9425
#define LOG_COLOR_BLUE LOG_COLOR_BLUE265,9456
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE266,9482
#define LOG_COLOR_GREEN LOG_COLOR_GREEN267,9514
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN268,9541
#define LOG_COLOR_CYAN LOG_COLOR_CYAN269,9574
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN270,9600
#define LOG_COLOR_RED LOG_COLOR_RED271,9632
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED272,9657
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE273,9688
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE274,9716
#define LOG_COLOR_BROWN LOG_COLOR_BROWN275,9750
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW276,9777
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY277,9805
#define LOG_COLOR_WHITE LOG_COLOR_WHITE278,9837
#define LOG_FMT LOG_FMT279,9864
typedef struct mc_message_structmc_message_struct325,11499
    mo object;object327,11534
	const void* addr;addr328,11549
}mc_message;mc_message329,11568
#define lamda(lamda330,11581
#define _lamda _lamda331,11621
#define MC_NO_NODE(MC_NO_NODE377,13414
#define MC_ONE_NODE(MC_ONE_NODE378,13459
#define MC_TWO_NODE(MC_TWO_NODE379,13519

binary/monkc4ios/monkc.h,6037
#define __MCRuntime____MCRuntime__29,1505
#define MC_STRICT_MODE MC_STRICT_MODE51,2097
#define MAX_KEY_CHARS MAX_KEY_CHARS54,2145
#define nil nil58,2191
#define xxx xxx61,2222
#define S(S62,2244
#define A_B(A_B63,2268
typedef struct mc_hashitem_structmc_hashitem_struct65,2295
	struct mc_hashitem_struct* next;next67,2331
	unsigned hash;hash68,2365
	unsigned index;index69,2381
	unsigned level;level70,2398
	void* value;value71,2415
	char key[MAX_KEY_CHARS];key72,2429
}mc_hashitem;mc_hashitem73,2455
typedef struct mc_hashtable_structmc_hashtable_struct75,2470
	int lock;lock77,2507
	unsigned level;level78,2518
	unsigned count;count79,2535
	mc_hashitem* items[];items80,2552
}mc_hashtable;mc_hashtable81,2575
typedef struct mc_block_structmc_block_struct83,2591
	struct mc_block_struct* next;next85,2624
	void* data;data86,2655
}mc_block;mc_block87,2668
typedef struct mc_blockpool_structmc_blockpool_struct89,2680
	int lock;lock91,2717
	mc_block* tail;tail92,2728
}mc_blockpool;mc_blockpool93,2745
typedef struct mc_class_structmc_class_struct96,2818
	size_t objsize;objsize98,2851
	mc_hashtable* table;table99,2868
	mc_blockpool* free_pool;free_pool100,2890
	mc_blockpool* used_pool;used_pool101,2916
	mc_hashitem* item;item102,2942
}mc_class;mc_class103,2962
typedef struct mc_object_structmc_object_struct106,3027
	struct mc_object_struct* super;super108,3061
	mc_class* isa;isa109,3094
	mc_block* block;block110,3110
	int ref_count;ref_count111,3128
	mc_class* saved_isa;saved_isa112,3144
	mc_class* mode;mode113,3166
}mc_object;mc_object114,3183
typedef mc_object* mo;mo115,3195
#define monkc(monkc117,3219
#define end(end126,3393
#define implements(implements130,3496
#define extends(extends131,3525
typedef mc_class* (*loaderFP)(mc_class*);loaderFP134,3583
typedef mc_object* (*initerFP)(mc_object*);initerFP135,3625
#define loader(loader138,3682
#define initer(initer139,3749
#define binding(binding142,3825
#define override(override143,3903
#define hinding(hinding144,3982
#define hverride(hverride145,4071
#define method(method146,4162
#define protocol(protocol147,4272
#define cast(cast148,4389
#define newc(newc151,4450
#define new(new152,4587
#define hew(hew153,4712
#define new_category(new_category154,4813
#define hew_category(hew_category155,4945
#define clear(clear156,5089
#define hlear(hlear157,5156
#define info(info158,5236
#define hnfo(hnfo159,5314
#define callc(callc162,5422
#define call(call163,5529
#define response_to(response_to164,5627
#define hesponse_to(hesponse_to165,5693
#define ffc(ffc166,5771
#define ff(ff167,5893
#define fh(fh168,6007
#define fs(fs169,6120
#define shift(shift170,6209
#define shift_back(shift_back171,6289
#define REFCOUNT_NO_MM REFCOUNT_NO_MM193,7285
#define REFCOUNT_ERR REFCOUNT_ERR194,7312
#define recycle(recycle198,7423
#define release(release199,7462
#define retain(retain200,7501
#define deref(deref208,7776
#define addrof(addrof209,7800
int LOG_LEVEL;LOG_LEVEL215,7841
#define MC_SILENT MC_SILENT217,7857
#define MC_ERROR_ONLY MC_ERROR_ONLY218,7881
#define MC_DEBUG MC_DEBUG219,7905
#define MC_VERBOSE MC_VERBOSE220,7929
#define LOG_COLOR_NONE LOG_COLOR_NONE221,7953
#define LOG_COLOR_BLACK LOG_COLOR_BLACK222,7986
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY223,8023
#define LOG_COLOR_BLUE LOG_COLOR_BLUE224,8064
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE225,8100
#define LOG_COLOR_GREEN LOG_COLOR_GREEN226,8142
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN227,8179
#define LOG_COLOR_CYAN LOG_COLOR_CYAN228,8222
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN229,8258
#define LOG_COLOR_RED LOG_COLOR_RED230,8300
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED231,8335
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE232,8376
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE233,8414
#define LOG_COLOR_BROWN LOG_COLOR_BROWN234,8458
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW235,8495
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY236,8533
#define LOG_COLOR_WHITE LOG_COLOR_WHITE237,8575
#define LOG_FMT LOG_FMT238,8612
#define VEC_STACK_SIZE VEC_STACK_SIZE268,9497
	double x;x279,9779
}vector_struct;vector_struct280,9790
typedef vector_struct* vector;vector281,9806
	double x;x284,9854
	double y;y285,9865
}vector2_struct;vector2_struct286,9876
typedef vector2_struct* vector2;vector2287,9893
	double x;x290,9943
	double y;y291,9954
	double z;z292,9965
}vector3_struct;vector3_struct293,9976
typedef vector3_struct* vector3;vector3294,9993
	double x;x297,10043
	double y;y298,10054
	double z;z299,10065
	double t;t300,10076
}vector4_struct;vector4_struct301,10087
typedef vector4_struct* vector4;vector4302,10104
#define popvx(popvx309,10301
#define popvy(popvy310,10327
#define popvz(popvz311,10353
#define popvt(popvt312,10379
	long double x;x316,10468
}wector_struct;wector_struct317,10484
typedef wector_struct* wector;wector318,10500
	long double x;x321,10548
	long double y;y322,10564
}wector2_struct;wector2_struct323,10580
typedef wector2_struct* wector2;wector2324,10597
	long double x;x327,10647
	long double y;y328,10663
	long double z;z329,10679
}wector3_struct;wector3_struct330,10695
typedef wector3_struct* wector3;wector3331,10712
	long double x;x334,10762
	long double y;y335,10778
	long double z;z336,10794
	long double t;t337,10810
}wector4_struct;wector4_struct338,10826
typedef wector4_struct* wector4;wector4339,10843
#define popwx(popwx346,11090
#define popwy(popwy347,11116
#define popwz(popwz348,11142
#define popwt(popwt349,11168
typedef struct mc_message_structmc_message_struct376,12119
    mo object;object378,12154
	const void* addr;addr379,12169
}mc_message;mc_message380,12188
#define MC_NO_NODE(MC_NO_NODE414,13571
#define MC_ONE_NODE(MC_ONE_NODE415,13616
#define MC_TWO_NODE(MC_TWO_NODE416,13676

binary/monkc4linux/monkc.h,7181
#define __MCRuntime____MCRuntime__29,1510
#define MC_STRICT_MODE MC_STRICT_MODE51,2103
#define MAX_KEY_CHARS MAX_KEY_CHARS54,2151
#define nil nil58,2197
#define xxx xxx61,2228
#define S(S62,2250
#define A_B(A_B63,2274
typedef struct mc_hashitem_structmc_hashitem_struct65,2301
	struct mc_hashitem_struct* next;next67,2337
	unsigned hash;hash68,2371
	unsigned index;index69,2387
	unsigned level;level70,2404
	void* value;value71,2421
	char key[MAX_KEY_CHARS];key72,2435
}mc_hashitem;mc_hashitem73,2461
typedef struct mc_hashtable_structmc_hashtable_struct75,2476
	int lock;lock77,2513
	unsigned level;level78,2524
	unsigned count;count79,2541
	mc_hashitem* items[];items80,2558
}mc_hashtable;mc_hashtable81,2581
typedef struct mc_block_structmc_block_struct83,2597
	struct mc_block_struct* next;next85,2630
	void* data;data86,2661
}mc_block;mc_block87,2674
typedef struct mc_blockpool_structmc_blockpool_struct89,2686
	int lock;lock91,2723
	mc_block* tail;tail92,2734
}mc_blockpool;mc_blockpool93,2751
typedef struct mc_class_structmc_class_struct96,2824
	size_t objsize;objsize98,2857
	mc_hashtable* table;table99,2874
	mc_blockpool* free_pool;free_pool100,2896
	mc_blockpool* used_pool;used_pool101,2922
	mc_hashitem* item;item102,2948
}mc_class;mc_class103,2968
typedef struct mc_object_structmc_object_struct106,3033
	struct mc_object_struct* super;super108,3067
	mc_class* isa;isa109,3100
	mc_block* block;block110,3116
	int ref_count;ref_count111,3134
	mc_class* saved_isa;saved_isa112,3150
	mc_class* mode;mode113,3172
}mc_object;mc_object114,3189
typedef mc_object* mo;mo115,3201
#define monkc(monkc117,3225
#define end(end126,3398
#define implements(implements131,3542
#define extends(extends132,3571
typedef mc_class* (*loaderFP)(mc_class*);loaderFP135,3629
typedef mc_object* (*initerFP)(mc_object*);initerFP136,3671
#define loader(loader139,3728
#define initer(initer140,3795
#define binding(binding143,3871
#define override(override144,3949
#define hinding(hinding145,4028
#define hverride(hverride146,4117
#define method(method147,4208
#define protocol(protocol148,4318
#define cast(cast149,4435
#define newc(newc152,4496
#define new(new153,4633
#define hew(hew154,4758
#define new_category(new_category155,4859
#define hew_category(hew_category156,4991
#define clear(clear157,5135
#define hlear(hlear158,5202
#define info(info159,5282
#define hnfo(hnfo160,5360
#define callc(callc163,5468
#define call(call164,5575
#define response_to(response_to165,5673
#define hesponse_to(hesponse_to166,5739
#define ffc(ffc167,5817
#define ff(ff168,5939
#define fh(fh169,6053
#define fs(fs170,6166
#define shift(shift171,6255
#define shift_back(shift_back172,6335
#define REFCOUNT_NO_MM REFCOUNT_NO_MM194,7335
#define REFCOUNT_ERR REFCOUNT_ERR195,7362
#define recycle(recycle199,7473
#define release(release200,7512
#define retain(retain201,7551
#define nameof(nameof209,7832
#define nameofc(nameofc210,7871
#define deref(deref211,7908
#define addrof(addrof212,7932
int LOG_LEVEL;LOG_LEVEL218,7973
#define MC_SILENT MC_SILENT220,7989
#define MC_ERROR_ONLY MC_ERROR_ONLY221,8013
#define MC_DEBUG MC_DEBUG222,8037
#define MC_VERBOSE MC_VERBOSE223,8061
#define MC_LOG_USE_COLORMC_LOG_USE_COLOR225,8086
#define LOG_COLOR_NONE LOG_COLOR_NONE227,8135
#define LOG_COLOR_BLACK LOG_COLOR_BLACK228,8168
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY229,8205
#define LOG_COLOR_BLUE LOG_COLOR_BLUE230,8246
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE231,8282
#define LOG_COLOR_GREEN LOG_COLOR_GREEN232,8324
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN233,8361
#define LOG_COLOR_CYAN LOG_COLOR_CYAN234,8404
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN235,8440
#define LOG_COLOR_RED LOG_COLOR_RED236,8482
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED237,8517
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE238,8558
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE239,8596
#define LOG_COLOR_BROWN LOG_COLOR_BROWN240,8640
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW241,8677
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY242,8715
#define LOG_COLOR_WHITE LOG_COLOR_WHITE243,8757
#define LOG_FMT LOG_FMT244,8794
#define LOG_COLOR_NONE LOG_COLOR_NONE246,8830
#define LOG_COLOR_BLACK LOG_COLOR_BLACK247,8856
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY248,8883
#define LOG_COLOR_BLUE LOG_COLOR_BLUE249,8914
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE250,8940
#define LOG_COLOR_GREEN LOG_COLOR_GREEN251,8972
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN252,8999
#define LOG_COLOR_CYAN LOG_COLOR_CYAN253,9032
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN254,9058
#define LOG_COLOR_RED LOG_COLOR_RED255,9090
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED256,9115
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE257,9146
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE258,9174
#define LOG_COLOR_BROWN LOG_COLOR_BROWN259,9208
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW260,9235
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY261,9263
#define LOG_COLOR_WHITE LOG_COLOR_WHITE262,9295
#define LOG_FMT LOG_FMT263,9322
#define VEC_STACK_SIZE VEC_STACK_SIZE294,10207
	double x;x305,10489
}vector_struct;vector_struct306,10500
typedef vector_struct* vector;vector307,10516
	double x;x310,10564
	double y;y311,10575
}vector2_struct;vector2_struct312,10586
typedef vector2_struct* vector2;vector2313,10603
	double x;x316,10653
	double y;y317,10664
	double z;z318,10675
}vector3_struct;vector3_struct319,10686
typedef vector3_struct* vector3;vector3320,10703
	double x;x323,10753
	double y;y324,10764
	double z;z325,10775
	double t;t326,10786
}vector4_struct;vector4_struct327,10797
typedef vector4_struct* vector4;vector4328,10814
#define popvx(popvx335,11011
#define popvy(popvy336,11037
#define popvz(popvz337,11063
#define popvt(popvt338,11089
	long double x;x342,11178
}wector_struct;wector_struct343,11194
typedef wector_struct* wector;wector344,11210
	long double x;x347,11258
	long double y;y348,11274
}wector2_struct;wector2_struct349,11290
typedef wector2_struct* wector2;wector2350,11307
	long double x;x353,11357
	long double y;y354,11373
	long double z;z355,11389
}wector3_struct;wector3_struct356,11405
typedef wector3_struct* wector3;wector3357,11422
	long double x;x360,11472
	long double y;y361,11488
	long double z;z362,11504
	long double t;t363,11520
}wector4_struct;wector4_struct364,11536
typedef wector4_struct* wector4;wector4365,11553
#define popwx(popwx372,11800
#define popwy(popwy373,11826
#define popwz(popwz374,11852
#define popwt(popwt375,11878
typedef struct mc_message_structmc_message_struct402,12829
    mo object;object404,12864
	const void* addr;addr405,12879
}mc_message;mc_message406,12898
#define lamda(lamda407,12911
#define _lamda _lamda408,12951
#define MC_NO_NODE(MC_NO_NODE442,14376
#define MC_ONE_NODE(MC_ONE_NODE443,14421
#define MC_TWO_NODE(MC_TWO_NODE444,14481

binary/monkc4mac/monkc.h,7181
#define __MCRuntime____MCRuntime__29,1510
#define MC_STRICT_MODE MC_STRICT_MODE51,2103
#define MAX_KEY_CHARS MAX_KEY_CHARS54,2151
#define nil nil58,2197
#define xxx xxx61,2228
#define S(S62,2250
#define A_B(A_B63,2274
typedef struct mc_hashitem_structmc_hashitem_struct65,2301
	struct mc_hashitem_struct* next;next67,2337
	unsigned hash;hash68,2371
	unsigned index;index69,2387
	unsigned level;level70,2404
	void* value;value71,2421
	char key[MAX_KEY_CHARS];key72,2435
}mc_hashitem;mc_hashitem73,2461
typedef struct mc_hashtable_structmc_hashtable_struct75,2476
	int lock;lock77,2513
	unsigned level;level78,2524
	unsigned count;count79,2541
	mc_hashitem* items[];items80,2558
}mc_hashtable;mc_hashtable81,2581
typedef struct mc_block_structmc_block_struct83,2597
	struct mc_block_struct* next;next85,2630
	void* data;data86,2661
}mc_block;mc_block87,2674
typedef struct mc_blockpool_structmc_blockpool_struct89,2686
	int lock;lock91,2723
	mc_block* tail;tail92,2734
}mc_blockpool;mc_blockpool93,2751
typedef struct mc_class_structmc_class_struct96,2824
	size_t objsize;objsize98,2857
	mc_hashtable* table;table99,2874
	mc_blockpool* free_pool;free_pool100,2896
	mc_blockpool* used_pool;used_pool101,2922
	mc_hashitem* item;item102,2948
}mc_class;mc_class103,2968
typedef struct mc_object_structmc_object_struct106,3033
	struct mc_object_struct* super;super108,3067
	mc_class* isa;isa109,3100
	mc_block* block;block110,3116
	int ref_count;ref_count111,3134
	mc_class* saved_isa;saved_isa112,3150
	mc_class* mode;mode113,3172
}mc_object;mc_object114,3189
typedef mc_object* mo;mo115,3201
#define monkc(monkc117,3225
#define end(end126,3398
#define implements(implements131,3542
#define extends(extends132,3571
typedef mc_class* (*loaderFP)(mc_class*);loaderFP135,3629
typedef mc_object* (*initerFP)(mc_object*);initerFP136,3671
#define loader(loader139,3728
#define initer(initer140,3795
#define binding(binding143,3871
#define override(override144,3949
#define hinding(hinding145,4028
#define hverride(hverride146,4117
#define method(method147,4208
#define protocol(protocol148,4318
#define cast(cast149,4435
#define newc(newc152,4496
#define new(new153,4633
#define hew(hew154,4758
#define new_category(new_category155,4859
#define hew_category(hew_category156,4991
#define clear(clear157,5135
#define hlear(hlear158,5202
#define info(info159,5282
#define hnfo(hnfo160,5360
#define callc(callc163,5468
#define call(call164,5575
#define response_to(response_to165,5673
#define hesponse_to(hesponse_to166,5739
#define ffc(ffc167,5817
#define ff(ff168,5939
#define fh(fh169,6053
#define fs(fs170,6166
#define shift(shift171,6255
#define shift_back(shift_back172,6335
#define REFCOUNT_NO_MM REFCOUNT_NO_MM194,7335
#define REFCOUNT_ERR REFCOUNT_ERR195,7362
#define recycle(recycle199,7473
#define release(release200,7512
#define retain(retain201,7551
#define nameof(nameof209,7832
#define nameofc(nameofc210,7871
#define deref(deref211,7908
#define addrof(addrof212,7932
int LOG_LEVEL;LOG_LEVEL218,7973
#define MC_SILENT MC_SILENT220,7989
#define MC_ERROR_ONLY MC_ERROR_ONLY221,8013
#define MC_DEBUG MC_DEBUG222,8037
#define MC_VERBOSE MC_VERBOSE223,8061
#define MC_LOG_USE_COLORMC_LOG_USE_COLOR225,8086
#define LOG_COLOR_NONE LOG_COLOR_NONE227,8135
#define LOG_COLOR_BLACK LOG_COLOR_BLACK228,8168
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY229,8205
#define LOG_COLOR_BLUE LOG_COLOR_BLUE230,8246
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE231,8282
#define LOG_COLOR_GREEN LOG_COLOR_GREEN232,8324
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN233,8361
#define LOG_COLOR_CYAN LOG_COLOR_CYAN234,8404
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN235,8440
#define LOG_COLOR_RED LOG_COLOR_RED236,8482
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED237,8517
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE238,8558
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE239,8596
#define LOG_COLOR_BROWN LOG_COLOR_BROWN240,8640
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW241,8677
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY242,8715
#define LOG_COLOR_WHITE LOG_COLOR_WHITE243,8757
#define LOG_FMT LOG_FMT244,8794
#define LOG_COLOR_NONE LOG_COLOR_NONE246,8830
#define LOG_COLOR_BLACK LOG_COLOR_BLACK247,8856
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY248,8883
#define LOG_COLOR_BLUE LOG_COLOR_BLUE249,8914
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE250,8940
#define LOG_COLOR_GREEN LOG_COLOR_GREEN251,8972
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN252,8999
#define LOG_COLOR_CYAN LOG_COLOR_CYAN253,9032
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN254,9058
#define LOG_COLOR_RED LOG_COLOR_RED255,9090
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED256,9115
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE257,9146
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE258,9174
#define LOG_COLOR_BROWN LOG_COLOR_BROWN259,9208
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW260,9235
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY261,9263
#define LOG_COLOR_WHITE LOG_COLOR_WHITE262,9295
#define LOG_FMT LOG_FMT263,9322
#define VEC_STACK_SIZE VEC_STACK_SIZE294,10207
	double x;x305,10489
}vector_struct;vector_struct306,10500
typedef vector_struct* vector;vector307,10516
	double x;x310,10564
	double y;y311,10575
}vector2_struct;vector2_struct312,10586
typedef vector2_struct* vector2;vector2313,10603
	double x;x316,10653
	double y;y317,10664
	double z;z318,10675
}vector3_struct;vector3_struct319,10686
typedef vector3_struct* vector3;vector3320,10703
	double x;x323,10753
	double y;y324,10764
	double z;z325,10775
	double t;t326,10786
}vector4_struct;vector4_struct327,10797
typedef vector4_struct* vector4;vector4328,10814
#define popvx(popvx335,11011
#define popvy(popvy336,11037
#define popvz(popvz337,11063
#define popvt(popvt338,11089
	long double x;x342,11178
}wector_struct;wector_struct343,11194
typedef wector_struct* wector;wector344,11210
	long double x;x347,11258
	long double y;y348,11274
}wector2_struct;wector2_struct349,11290
typedef wector2_struct* wector2;wector2350,11307
	long double x;x353,11357
	long double y;y354,11373
	long double z;z355,11389
}wector3_struct;wector3_struct356,11405
typedef wector3_struct* wector3;wector3357,11422
	long double x;x360,11472
	long double y;y361,11488
	long double z;z362,11504
	long double t;t363,11520
}wector4_struct;wector4_struct364,11536
typedef wector4_struct* wector4;wector4365,11553
#define popwx(popwx372,11800
#define popwy(popwy373,11826
#define popwz(popwz374,11852
#define popwt(popwt375,11878
typedef struct mc_message_structmc_message_struct402,12829
    mo object;object404,12864
	const void* addr;addr405,12879
}mc_message;mc_message406,12898
#define lamda(lamda407,12911
#define _lamda _lamda408,12951
#define MC_NO_NODE(MC_NO_NODE442,14376
#define MC_ONE_NODE(MC_ONE_NODE443,14421
#define MC_TWO_NODE(MC_TWO_NODE444,14481

binary/monkc4win/monkc.h,7131
#define __MCRuntime____MCRuntime__29,1505
#define MC_STRICT_MODE MC_STRICT_MODE51,2098
#define MAX_KEY_CHARS MAX_KEY_CHARS54,2146
#define nil nil58,2192
#define xxx xxx61,2223
#define S(S63,2281
#define A_B(A_B64,2305
typedef struct mc_hashitem_structmc_hashitem_struct66,2332
	struct mc_hashitem_struct* next;next68,2368
	unsigned hash;hash69,2402
	unsigned index;index70,2418
	unsigned level;level71,2435
	void* value;value72,2452
	char key[MAX_KEY_CHARS];key73,2466
}mc_hashitem;mc_hashitem74,2492
typedef struct mc_hashtable_structmc_hashtable_struct76,2507
	int lock;lock78,2544
	unsigned level;level79,2555
	unsigned count;count80,2572
	mc_hashitem* items[];items81,2589
}mc_hashtable;mc_hashtable82,2612
typedef struct mc_block_structmc_block_struct84,2628
	struct mc_block_struct* next;next86,2661
	void* data;data87,2692
}mc_block;mc_block88,2705
typedef struct mc_blockpool_structmc_blockpool_struct90,2717
	int lock;lock92,2754
	mc_block* tail;tail93,2765
}mc_blockpool;mc_blockpool94,2782
typedef struct mc_class_structmc_class_struct97,2855
	size_t objsize;objsize99,2888
	mc_hashtable* table;table100,2905
	mc_blockpool* free_pool;free_pool101,2927
	mc_blockpool* used_pool;used_pool102,2953
	mc_hashitem* item;item103,2979
}mc_class;mc_class104,2999
typedef struct mc_object_structmc_object_struct107,3064
	struct mc_object_struct* super;super109,3098
	mc_class* isa;isa110,3131
	mc_block* block;block111,3147
	int ref_count;ref_count112,3165
	mc_class* saved_isa;saved_isa113,3181
	mc_class* mode;mode114,3203
}mc_object;mc_object115,3220
typedef mc_object* mo;mo116,3232
#define monkc(monkc118,3256
#define end(end127,3430
#define implements(implements132,3574
#define extends(extends133,3603
typedef mc_class* (*loaderFP)(mc_class*);loaderFP136,3661
typedef mc_object* (*initerFP)(mc_object*);initerFP137,3703
#define loader(loader140,3760
#define initer(initer141,3827
#define binding(binding144,3903
#define override(override145,3981
#define hinding(hinding146,4060
#define hverride(hverride147,4149
#define method(method148,4240
#define protocol(protocol149,4350
#define cast(cast150,4467
#define newc(newc153,4528
#define new(new154,4665
#define hew(hew155,4790
#define new_category(new_category156,4891
#define hew_category(hew_category157,5023
#define clear(clear158,5167
#define hlear(hlear159,5234
#define info(info160,5314
#define hnfo(hnfo161,5392
#define callc(callc164,5500
#define call(call165,5607
#define response_to(response_to166,5711
#define hesponse_to(hesponse_to167,5777
#define ffc(ffc168,5855
#define ff(ff169,5977
#define fh(fh170,6091
#define fs(fs171,6204
#define shift(shift172,6293
#define shift_back(shift_back173,6373
#define REFCOUNT_NO_MM REFCOUNT_NO_MM195,7369
#define REFCOUNT_ERR REFCOUNT_ERR196,7396
#define recycle(recycle200,7507
#define release(release201,7546
#define retain(retain202,7585
#define nameof(nameof210,7846
#define nameofc(nameofc211,7885
#define deref(deref212,7922
#define addrof(addrof213,7946
#define MC_SILENT MC_SILENT219,7987
#define MC_ERROR_ONLY MC_ERROR_ONLY220,8018
#define MC_DEBUG MC_DEBUG221,8049
#define MC_VERBOSE MC_VERBOSE222,8080
int LOG_LEVEL;LOG_LEVEL224,8112
#define LOG_COLOR_NONE LOG_COLOR_NONE228,8179
#define LOG_COLOR_BLACK LOG_COLOR_BLACK229,8212
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY230,8249
#define LOG_COLOR_BLUE LOG_COLOR_BLUE231,8290
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE232,8326
#define LOG_COLOR_GREEN LOG_COLOR_GREEN233,8368
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN234,8405
#define LOG_COLOR_CYAN LOG_COLOR_CYAN235,8448
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN236,8484
#define LOG_COLOR_RED LOG_COLOR_RED237,8526
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED238,8561
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE239,8602
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE240,8640
#define LOG_COLOR_BROWN LOG_COLOR_BROWN241,8684
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW242,8721
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY243,8759
#define LOG_COLOR_WHITE LOG_COLOR_WHITE244,8801
#define LOG_FMT LOG_FMT245,8838
#define LOG_COLOR_NONE LOG_COLOR_NONE247,8874
#define LOG_COLOR_BLACK LOG_COLOR_BLACK248,8900
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY249,8927
#define LOG_COLOR_BLUE LOG_COLOR_BLUE250,8958
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE251,8984
#define LOG_COLOR_GREEN LOG_COLOR_GREEN252,9016
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN253,9043
#define LOG_COLOR_CYAN LOG_COLOR_CYAN254,9076
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN255,9102
#define LOG_COLOR_RED LOG_COLOR_RED256,9134
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED257,9159
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE258,9190
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE259,9218
#define LOG_COLOR_BROWN LOG_COLOR_BROWN260,9252
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW261,9279
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY262,9307
#define LOG_COLOR_WHITE LOG_COLOR_WHITE263,9339
#define LOG_FMT LOG_FMT264,9366
#define VEC_STACK_SIZE VEC_STACK_SIZE295,10251
	double x;x306,10533
}vector_struct;vector_struct307,10544
typedef vector_struct* vector;vector308,10560
	double x;x311,10608
	double y;y312,10619
}vector2_struct;vector2_struct313,10630
typedef vector2_struct* vector2;vector2314,10647
	double x;x317,10697
	double y;y318,10708
	double z;z319,10719
}vector3_struct;vector3_struct320,10730
typedef vector3_struct* vector3;vector3321,10747
	double x;x324,10797
	double y;y325,10808
	double z;z326,10819
	double t;t327,10830
}vector4_struct;vector4_struct328,10841
typedef vector4_struct* vector4;vector4329,10858
#define popvx(popvx336,11055
#define popvy(popvy337,11081
#define popvz(popvz338,11107
#define popvt(popvt339,11133
	long double x;x343,11222
}wector_struct;wector_struct344,11238
typedef wector_struct* wector;wector345,11254
	long double x;x348,11302
	long double y;y349,11318
}wector2_struct;wector2_struct350,11334
typedef wector2_struct* wector2;wector2351,11351
	long double x;x354,11401
	long double y;y355,11417
	long double z;z356,11433
}wector3_struct;wector3_struct357,11449
typedef wector3_struct* wector3;wector3358,11466
	long double x;x361,11516
	long double y;y362,11532
	long double z;z363,11548
	long double t;t364,11564
}wector4_struct;wector4_struct365,11580
typedef wector4_struct* wector4;wector4366,11597
#define popwx(popwx373,11844
#define popwy(popwy374,11870
#define popwz(popwz375,11896
#define popwt(popwt376,11922
typedef struct mc_message_structmc_message_struct403,12873
    mo object;object405,12908
	const void* addr;addr406,12923
}mc_message;mc_message407,12942
#define lamda(lamda408,12955
#define _lamda _lamda409,12995
#define MC_NO_NODE(MC_NO_NODE443,14455
#define MC_ONE_NODE(MC_ONE_NODE444,14500
#define MC_TWO_NODE(MC_TWO_NODE445,14560

doc/index.html,0

examples/build/Main.c,225
void monkc_runtime_check()monkc_runtime_check10,167
void testMonkC()testMonkC21,461
void testLemontea()testLemontea53,1241
void test(MCContext* context)test99,2842
int main(int argc, char const *argv[])main152,4270

examples/build/LittleBirdFather.c,319
initer(LittleBirdFather)initer12,202
method(LittleBirdFather, int, getAge, xxx)method18,285
method(LittleBirdFather, void, fly, xxx)method23,348
method(LittleBirdFather, void, hello_abs, mo receiver)method28,438
method(LittleBirdFather, void, land_imp, xxx)method33,543
loader(LittleBirdFather)loader38,638

examples/build/LittleBird.c,396
initer(LittleBird)initer14,236
method(LittleBird, LittleBird*, initWithName, char* aname)method21,342
method(LittleBird, void, yourName, xxx)method27,445
method(LittleBird, void, fly, xxx)method32,533
method(LittleBird, void, swim, xxx)method37,610
method(LittleBird, void, eat, xxx)method42,679
method(LittleBird, void, hello_imp, xxx)method48,762
loader(LittleBird)loader53,845

examples/build/BirdBase.c,122
initer(BirdBase)initer11,156
loader(BirdBase)loader16,194
method(BirdBase, void, land_abs, mo receiver)method23,295

examples/build/BirdGrandFather.c,308
initer(BirdGrandFather)initer3,30
method(BirdGrandFather, void, bye, xxx)method11,164
method(BirdGrandFather, void, flyhigh, xxx)method16,265
method(BirdGrandFather, void, fly, xxx)method21,365
method(BirdGrandFather, void, singAsong, char* asong)method26,451
loader(BirdGrandFather)loader31,563

examples/build/BirdFather.c,278
initer(BirdFather)initer3,25
method(BirdFather, void, bye, xxx)method11,176
method(BirdFather, void, flyhigh, xxx)method17,294
method(BirdFather, void, fly, xxx)method22,389
method(BirdFather, void, singAsong, char* asong)method27,470
loader(BirdFather)loader32,577

examples/build/Bird.c,402
initer(Bird)initer3,19
method(Bird, void, bye, xxx)method11,150
void funcA(Bird* obj, int arg1)funcA17,262
protocol(Flyable, void, duckFly, xxx)protocol22,338
protocol(Flyable, void, chickenFly, xxx)protocol27,436
method(Bird, Bird*, initWithType, int type)method32,537
method(Bird, int, fatherAge, xxx)method38,618
method(Bird, void, fly, xxx)method45,781
loader(Bird)loader107,2295

examples/build/BirdCatA.c,258
initer(BirdCatA)initer3,23
method(Bird, void, catmethodA, xxx)method9,83
method(Bird, void, catmethodB, xxx)method14,181
method(Bird, void, catmethodC, xxx)method19,279
method(Bird, void, catmethodD, xxx)method24,377
loader(BirdCatA)loader29,475

examples/build/ObjectLifeCycle.c,58
void test_object_life_cycle()test_object_life_cycle4,31

examples/build/MethodJumpping.c,178
void jumpTarget(mo const this, const void* entry, int arg1, int arg2)jumpTarget3,29
void TargetVoid()TargetVoid13,263
void test_method_jumpping()test_method_jumpping20,373

examples/build/MenuDrivenExample.c,62
void menu_drive_test(MCContext* context)menu_drive_test3,32

examples/build/ClientServerExample.c,248
void mocha_clientsocket_test(MCContext* context, const char* serverip)mocha_clientsocket_test5,74
static int readline(int fd, char* const recvbuff)readline25,568
void mocha_serversocket_test(const char* clientip)mocha_serversocket_test37,814

examples/build/BirdModeA.c,269
initer(BirdModeA)initer3,24
method(Bird, void, modemethodA, xxx)method8,60
method(Bird, void, modemethodB, int type)method13,142
method(Bird, void, modemethodC, xxx)method18,229
method(Bird, void, modemethodD, xxx)method23,311
loader(BirdModeA)loader28,393

examples/build/ClientServerExample.h,0

examples/build/BirdModeA.h,99
#define BirdModeA_BirdModeA_5,57
monkc(BirdModeA);BirdModeA7,77
end(BirdModeA);BirdModeA8,95

examples/build/LittleBirdFather.h,181
#define MonkCAppXcodeTemplete_BirdFather_hMonkCAppXcodeTemplete_BirdFather_h10,192
monkc(LittleBirdFather);LittleBirdFather14,256
end(LittleBirdFather);LittleBirdFather15,281

examples/build/LittleBird.h,169
#define MonkCAppXcodeTemplete_Bird_hMonkCAppXcodeTemplete_Bird_h10,180
monkc(LittleBird);LittleBird14,238
char* name;name15,257
end(LittleBird);LittleBird16,269

examples/build/BirdBase.h,117
#define example_BirdBase_hexample_BirdBase_h10,160
monkc(BirdBase);BirdBase14,208
end(BirdBase);BirdBase15,225

examples/build/BirdFather.h,126
#define BirdFather_BirdFather_5,69
monkc(BirdFather);BirdFather7,90
	int age;age8,109
end(BirdFather);BirdFather9,119

examples/build/Makefile,350
MODULES = $(wildcard *.c)MODULES1,0
OBJS = $(patsubst %.c, %.o, $(MODULES))OBJS2,26
LINK_HEAD = -I/usr/local/include/monkc -I/usr/local/include/lemonteaLINK_HEAD3,66
LINK_BIN = -lpthread -L/usr/local/lib -lmonkc -llemonteaLINK_BIN4,135
CC = gcc -g -w -Wall -Wno-unused-variable -Wno-return-typeCC5,192
AS = asAS6,251
LEX = mcppLEX7,259

examples/build/BirdGrandFather.h,155
#define BirdGrandFather_BirdGrandFather_4,46
monkc(BirdGrandFather);BirdGrandFather6,72
	int age;age7,96
end(BirdGrandFather);BirdGrandFather8,106

examples/build/Bird.h,191
#define Bird_Bird_5,58
implements(Flyable);Flyable7,73
extends(BirdFather);BirdFather8,94
monkc(Bird);Bird9,115
	char* name;name10,128
	int type;type11,141
end(Bird);Bird12,152

examples/build/BirdCatA.h,93
#define BirdCatA_BirdCatA_5,56
monkc(BirdCatA);BirdCatA7,75
end(BirdCatA);BirdCatA8,92

examples/build/ObjectLifeCycle.h,0

examples/build/MethodJumpping.h,0

examples/build/MenuDrivenExample.h,0

examples/build/Flyable.h,0

examples/src/Main.c,225
void monkc_runtime_check()monkc_runtime_check10,167
void testMonkC()testMonkC21,461
void testLemontea()testLemontea53,1164
void test(MCContext* context)test99,2664
int main(int argc, char const *argv[])main152,4070

examples/src/ClientServerExample.c,248
void mocha_clientsocket_test(MCContext* context, const char* serverip)mocha_clientsocket_test5,74
static int readline(int fd, char* const recvbuff)readline25,545
void mocha_serversocket_test(const char* clientip)mocha_serversocket_test37,791

examples/src/ClientServerExample.h,0

examples/src/MenuDrivenExample.c,62
void menu_drive_test(MCContext* context)menu_drive_test3,32

examples/src/MenuDrivenExample.h,0

examples/src/MethodJumpping.c,178
void jumpTarget(mo const this, const void* entry, int arg1, int arg2)jumpTarget3,29
void TargetVoid()TargetVoid13,263
void test_method_jumpping()test_method_jumpping20,373

examples/src/MethodJumpping.h,0

examples/src/ObjectLifeCycle.c,58
void test_object_life_cycle()test_object_life_cycle4,31

examples/src/ObjectLifeCycle.h,0

examples/src/category/BirdCatA.c,258
initer(BirdCatA)initer3,23
method(Bird, void, catmethodA, xxx)method9,83
method(Bird, void, catmethodB, xxx)method14,181
method(Bird, void, catmethodC, xxx)method19,279
method(Bird, void, catmethodD, xxx)method24,377
loader(BirdCatA)loader29,475

examples/src/category/BirdCatA.h,93
#define BirdCatA_BirdCatA_5,56
monkc(BirdCatA);BirdCatA7,75
end(BirdCatA);BirdCatA8,92

examples/src/class/Bird.c,402
initer(Bird)initer3,19
method(Bird, void, bye, xxx)method11,150
void funcA(Bird* obj, int arg1)funcA17,262
protocol(Flyable, void, duckFly, xxx)protocol22,338
protocol(Flyable, void, chickenFly, xxx)protocol27,436
method(Bird, Bird*, initWithType, int type)method32,537
method(Bird, int, fatherAge, xxx)method38,618
method(Bird, void, fly, xxx)method45,781
loader(Bird)loader107,2295

examples/src/class/Bird.h,191
#define Bird_Bird_5,58
implements(Flyable);Flyable7,73
extends(BirdFather);BirdFather8,94
monkc(Bird);Bird9,115
	char* name;name10,128
	int type;type11,141
end(Bird);Bird12,152

examples/src/class/BirdFather.c,278
initer(BirdFather)initer3,25
method(BirdFather, void, bye, xxx)method11,176
method(BirdFather, void, flyhigh, xxx)method17,294
method(BirdFather, void, fly, xxx)method22,389
method(BirdFather, void, singAsong, char* asong)method27,470
loader(BirdFather)loader32,577

examples/src/class/BirdFather.h,126
#define BirdFather_BirdFather_5,69
monkc(BirdFather);BirdFather7,90
	int age;age8,109
end(BirdFather);BirdFather9,119

examples/src/class/BirdGrandFather.c,308
initer(BirdGrandFather)initer3,30
method(BirdGrandFather, void, bye, xxx)method11,164
method(BirdGrandFather, void, flyhigh, xxx)method16,265
method(BirdGrandFather, void, fly, xxx)method21,365
method(BirdGrandFather, void, singAsong, char* asong)method26,451
loader(BirdGrandFather)loader31,563

examples/src/class/BirdGrandFather.h,155
#define BirdGrandFather_BirdGrandFather_4,46
monkc(BirdGrandFather);BirdGrandFather6,72
	int age;age7,96
end(BirdGrandFather);BirdGrandFather8,106

examples/src/class/BirdBase.c,122
initer(BirdBase)initer11,156
loader(BirdBase)loader16,194
method(BirdBase, void, land_abs, mo receiver)method23,283

examples/src/class/BirdBase.h,117
#define example_BirdBase_hexample_BirdBase_h10,160
monkc(BirdBase);BirdBase14,208
end(BirdBase);BirdBase15,225

examples/src/class/LittleBird.c,396
initer(LittleBird)initer14,236
method(LittleBird, LittleBird*, initWithName, char* aname)method21,342
method(LittleBird, void, yourName, xxx)method27,445
method(LittleBird, void, fly, xxx)method32,533
method(LittleBird, void, swim, xxx)method37,610
method(LittleBird, void, eat, xxx)method42,679
method(LittleBird, void, hello_imp, xxx)method48,762
loader(LittleBird)loader53,845

examples/src/class/LittleBird.h,169
#define MonkCAppXcodeTemplete_Bird_hMonkCAppXcodeTemplete_Bird_h10,180
monkc(LittleBird);LittleBird14,238
char* name;name15,257
end(LittleBird);LittleBird16,269

examples/src/class/LittleBirdFather.c,319
initer(LittleBirdFather)initer12,202
method(LittleBirdFather, int, getAge, xxx)method18,285
method(LittleBirdFather, void, fly, xxx)method23,348
method(LittleBirdFather, void, hello_abs, mo receiver)method28,438
method(LittleBirdFather, void, land_imp, xxx)method33,532
loader(LittleBirdFather)loader38,627

examples/src/class/LittleBirdFather.h,181
#define MonkCAppXcodeTemplete_BirdFather_hMonkCAppXcodeTemplete_BirdFather_h10,192
monkc(LittleBirdFather);LittleBirdFather14,256
end(LittleBirdFather);LittleBirdFather15,281

examples/src/classmode/BirdModeA.c,269
initer(BirdModeA)initer3,24
method(Bird, void, modemethodA, xxx)method8,60
method(Bird, void, modemethodB, int type)method13,142
method(Bird, void, modemethodC, xxx)method18,229
method(Bird, void, modemethodD, xxx)method23,311
loader(BirdModeA)loader28,393

examples/src/classmode/BirdModeA.h,99
#define BirdModeA_BirdModeA_5,57
monkc(BirdModeA);BirdModeA7,77
end(BirdModeA);BirdModeA8,95

examples/src/protocol/Flyable.h,0

src/Makefile,513
BINPATH 	= /usr/local/binBINPATH1,0
RUNTIME_PATH 	= ./monkc_runtimeRUNTIME_PATH2,26
LEMONTEA_PATH 	= ./lemonteaLEMONTEA_PATH3,58
GEMONTEA_PATH 	= ./lemontea_GUI/srcGEMONTEA_PATH4,86
MCPP_PATH 	= ./monkc_preprocessorMCPP_PATH5,122
MCBUILD_PATH 	= ./monkc_buildtoolMCBUILD_PATH6,156
TESTPATH	= ./testsTESTPATH7,190
XCODEPATH       = ../XcodeMonkCXCODEPATH8,209
EXAMPLEPATH     = ../examplesEXAMPLEPATH9,241
OS=$(strip $(shell uname -s))OS11,272
MAKE = makeMAKE12,302
	MAKE = gmakeMAKE14,335

src/lemontea/MCArray.c,1203
initer(MCArray){initer4,42
loader(MCArray)loader12,147
method(MCArray, MCArray*, initWithSize, int size)method29,762
static void expand_array(MCArray* obj)expand_array38,941
static void insert_item(MCArray* obj, void* item)insert_item53,1346
static void delete_item(MCArray* obj, int index)delete_item59,1458
method(MCArray, MCArray*, addItem, void* item)method69,1663
method(MCArray, MCArray*, addItemToIndex, void* item, int index)method78,1811
method(MCArray, MCArray*, removeLastItem, xxx)method87,1968
static void visitor(_lamda, void* eachitem, int index)visitor93,2068
method(MCArray, MCArray*, removeItem, void* item)method98,2154
method(MCArray, MCArray*, removeItemByIndex, int index)method104,2273
method(MCArray, MCArray*, clear, xxx)method110,2373
method(MCArray, void*, getItemByIndex, int index)method116,2480
void example_visitor1(_lamda, void* item, int index){}example_visitor1122,2586
void example_visitor2(_lamda, void* item, int index, void* data){}example_visitor2123,2641
method(MCArray, void, visiteEachBy, lamdafunc visitorFunction)method125,2709
method(MCArray, void, visiteEachWithData, lamdafunc visitorFunction, void* data)method137,2975

src/lemontea/MCArray.h,199
#define MCARRAY_H_MCARRAY_H_4,43
monkc(MCArray);MCArray6,63
	int count;count7,79
	int size;size8,91
	int indexLast;indexLast9,102
	void* (*buff)[];buff10,118
end(MCArray);MCArray11,136

src/lemontea/MCBuffer.c,487
MCCharBuffer* NewMCCharBuffer(size_t size)NewMCCharBuffer3,23
MCCharBuffer* CopyToCharBuffer(MCCharBuffer* buff, char* src)CopyToCharBuffer10,189
MCIntBuffer* NewMCIntBuffer(size_t size)NewMCIntBuffer16,296
MCUnsignedBuffer* NewMCUnsignedBuffer(size_t size)NewMCUnsignedBuffer23,457
MCLongBuffer* NewMCLongBuffer(size_t size)NewMCLongBuffer30,643
MCDoubleBuffer* NewMCDoubleBuffer(size_t size)NewMCDoubleBuffer37,809
void ReleaseMCBuffer(void* buffer)ReleaseMCBuffer44,985

src/lemontea/MCBuffer.h,479
#define _MCBuffer_MCBuffer2,18
	size_t size;size7,96
	char data[];data8,110
}MCCharBuffer;MCCharBuffer9,124
	size_t size;size12,157
	int data[];data13,171
}MCIntBuffer;MCIntBuffer14,184
	size_t size;size17,216
	unsigned data[];data18,230
}MCUnsignedBuffer;MCUnsignedBuffer19,248
	size_t size;size22,285
	long data[];data23,299
}MCLongBuffer;MCLongBuffer24,313
	size_t size;size27,346
	double data[];data28,360
}MCDoubleBuffer;MCDoubleBuffer29,376

src/lemontea/MCClock.c,1425
initer(MCClock)initer3,22
loader(MCClock)loader9,67
method(MCClock, MCClock*, setTimeToNow, xxx)method40,1291
method(MCClock, method47,1421
method(MCClock, method62,1965
method(MCClock, void, setRawtime, struct tm rawtime_in)method76,2520
method(MCClock, method81,2609
method(MCClock, method99,3278
method(MCClock, void, getRawtime, struct tm* const result)method105,3373
static char* strbuff[50];strbuff110,3462
method(MCClock, char*, getTimeByString, xxx)method111,3488
method(MCClock, void, getCPUClocksPerSecond, clock_t* const result)method117,3605
method(MCClock, void, getCPUClocksSinceStart, clock_t* const result)method122,3705
static char* buff[50];buff127,3799
method(MCClock, char*, getCurrentTimeString, xxx)method128,3822
static char* gmbuff[50];gmbuff136,4007
method(MCClock, char*, getCurrentGMTTimeString, xxx)method137,4032
method(MCClock, void, printTime, xxx)method145,4218
method(MCClock, void, printCurrentTime, xxx)method150,4302
method(MCClock, void, printCurrentGMTTime, xxx)method156,4423
char* MCClock_rawtime2String(time_t* timeval)MCClock_rawtime2String162,4544
char* MCClock_settableTime2String(struct tm *tm)MCClock_settableTime2String167,4619
struct tm* MCClock_rawtime2SettableTimeGMT(time_t* timeval)MCClock_rawtime2SettableTimeGMT172,4694
struct tm* MCClock_rawtime2SettableTimeLocal(time_t* timeval)MCClock_rawtime2SettableTimeLocal177,4784

src/lemontea/MCClock.h,751
#define MCClock_MCClock_5,59
monkc(MCClock);MCClock7,77
	struct tm rawtime;rawtime8,93
end(MCClock);MCClock9,113
#define no_change no_change41,1558
enum weekday {weekday42,1582
	SUN, //SUNDAY,SUN43,1597
	MON, //MONDAY,MON44,1613
	TUE, //TUESDAY,TUE45,1629
	WED, //WEDNESDAY,WED46,1646
	THU, //THURSDAY,THU47,1665
	FRI, //FRIDAY,FRI48,1683
	SAT, //SATURDAY,SAT49,1699
enum month {month52,1721
	JAN, //JANUARY,JAN53,1734
	FEB, //FEBRUARY,FEB54,1751
	MAR, //MARCH,MAR55,1769
	APR, //APRIL,APR56,1784
	MAY,MAY57,1799
	JUN, //JUNE,JUN58,1805
	JUL, //JULY,JUL59,1819
	AUG, //AUGUST,AUG60,1833
	SEP, //SEPTEMBER,SEP61,1849
	OCT, //OCTOBER,OCT62,1868
	NOV, //NOVEMBER,NOV63,1885
	DEC, //DECEMBER,DEC64,1903

src/lemontea/MCContext.c,970
initer(MCContext)initer3,24
loader(MCContext)loader9,83
method(MCContext, method26,861
struct privateDataprivateData35,1018
static char get_one_char()get_one_char40,1055
static void get_chars_until_enter(char resultString[])get_chars_until_enter47,1162
method(MCContext, void, bye, xxx)method60,1356
method(MCContext, void, dumpParas, xxx)method65,1439
method(MCContext, char*, getPara, int index)method74,1568
method(MCContext, int, isIndexedParaEqualTo, int index, char* para)method79,1644
method(MCContext, int, isHavePara, char* para)method87,1830
method(MCContext, char, showMenuAndGetSelectionChar, int count, ...)method102,2086
method(MCContext, int, showConfirmAndGetBOOL, const char* confirm)method118,2420
method(MCContext, void, getUserInputString, char resultString[])method128,2593
method(MCContext, char*, getEnvironmentVar, const char* key)method141,2896
method(MCContext, method147,3018
method(MCContext, method157,3256

src/lemontea/MCContext.h,189
#define MCContext_MCContext_5,59
monkc(MCContext);MCContext7,79
	int argc;argc8,97
	char** argv;argv9,108
	char selectionChar;selectionChar10,122
end(MCContext);MCContext11,143

src/lemontea/MCException.c,643
jmp_buf exception_env = {};exception_env4,40
volatile int exception_type = __exception_try_not_called;exception_type5,68
static int _exception_list[MAX_EXCEPTION_NUM];_exception_list7,127
static mo _exception_store[MAX_EXCEPTION_NUM];_exception_store8,174
void clean_exception_context()clean_exception_context10,222
static inline unsigned _ehash(char *s)_ehash25,619
static unsigned _define_exception(char* s)_define_exception33,787
unsigned __get_exception_code(char* s)__get_exception_code44,1034
mo get_exception_data(char* key)get_exception_data55,1216
void set_exception_data(char* key, mo e)set_exception_data67,1442

src/lemontea/MCException.h,386
#define _MCException_MCException6,85
#define __exception_try_not_called __exception_try_not_called8,107
#define __MCNoneException __MCNoneException13,244
#define __ECODE(__ECODE14,272
#define throws(throws19,383
#define throw(throw20,405
#define try try22,514
#define catch(catch23,627
#define finally finally24,689
#define MAX_EXCEPTION_NUM MAX_EXCEPTION_NUM26,750

src/lemontea/MCIO.c,3922
loader(MCFile)loader5,33
initer(MCFile)initer24,798
method(MCFile, MCFile*, initWithPathName, char* pathname, int oflag)method33,905
loader(MCStream)loader50,1346
initer(MCStream)initer75,2333
method(MCStream, MCStream*, newWithPath, MCStreamType type, char* path)method81,2382
loader(MCSelect)loader114,3119
initer(MCSelect)initer124,3487
method(MCSelect, void, initWithSecondAndMicrosec, long second, long microsecond)method136,3724
method(MCFile, size_t, readFromBegin, off_t offset, size_t nbytes)method145,3935
method(MCFile, size_t, readAtLastPosition, off_t offset, size_t nbytes)method151,4101
method(MCFile, size_t, readFromEnd, off_t offset, size_t nbytes)method156,4231
method(MCFile, size_t, writeToBegin, off_t offset, void* buf, size_t nbytes)method161,4354
method(MCFile, size_t, writeToLastTime, off_t offset, void* buf, size_t nbytes)method166,4482
method(MCFile, size_t, writeToEnd, off_t offset, void* buf, size_t nbytes)method171,4613
method(MCFile, int, duplicateFd, xxx)method176,4739
method(MCFile, int, duplicateFdTo, int fd)method181,4804
void MCFile_flushAllCacheToDisk()MCFile_flushAllCacheToDisk186,4879
int MCFile_flushAFileCacheToDisk(int fd)MCFile_flushAFileCacheToDisk191,4936
method(MCFile, void, bye, xxx)method196,5001
method(MCFile, void, printAttribute, xxx)method203,5097
method(MCFile, int, checkPermissionUseRealIDOfProcess, int mode)method213,5339
int MCFile_isFileExist(char* pathname)MCFile_isFileExist221,5490
int MCFile_chmod(char* pathname, mode_t mode)MCFile_chmod230,5629
int MFFile_truncateFileTo(char* pathname, off_t length)MFFile_truncateFileTo238,5754
mode_t MCFile_setNewFilePermissionMask4Process(mode_t cmask)MCFile_setNewFilePermissionMask4Process246,5894
MCFile* MCFile_newReadOnly(char* pathname)MCFile_newReadOnly251,5982
MCFile* MCFile_newWriteOnly(char* pathname, int isClear)MCFile_newWriteOnly256,6101
MCFile* MCFile_newReadWrite(char* pathname, int isClear)MCFile_newReadWrite264,6334
int MCFile_createSymbolLink(char* pathname, char* linkname)MCFile_createSymbolLink272,6563
int MCFile_createDirectory(char* pathname)MCFile_createDirectory280,6708
int MCFile_removeDirectory(char* pathname)MCFile_removeDirectory288,6833
int MCProcess_changeCurrentWorkingDir(char* pathname)MCProcess_changeCurrentWorkingDir300,6968
int MCProcess_changeCurrentWorkingDirByFd(int fd)MCProcess_changeCurrentWorkingDirByFd308,7095
char* MCProcess_getCurrentWorkingDir(MCCharBuffer* buff)MCProcess_getCurrentWorkingDir316,7213
method(MCStream, void, bye, xxx)method325,7333
method(MCStream, int, getFileDescriptor, xxx)method334,7476
method(MCStream, int, getChar, xxx)method339,7560
method(MCStream, int, putChar, int charCode)method344,7633
method(MCStream, int, pushbackChar, int charCodeToBePushBack)method349,7725
method(MCStream, char*, getCString, MCCharBuffer* recvBuffer)method354,7847
method(MCStream, char*, putCString, MCCharBuffer* sendBuffer)method360,8018
method(MCStream, MCString*, getMCString, xxx)method366,8160
method(MCStream, int, putMCString, MCString* str)method373,8328
method(MCStream, size_t, getBianryObject, void* recvBuffer,  size_t objectSize, size_t numberOfObjs)method378,8426
method(MCStream, size_t, putBianryObject, void* sendBuffer,  size_t objectSize, size_t numberOfObjs)method384,8684
method(MCStream, off_t, tellOffset, xxx)method390,8950
method(MCStream, int, seekFromBegin, off_t offset)method396,9056
method(MCStream, int, seekFromCurrent, off_t offset)method402,9242
method(MCStream, int, seekFromEnd, off_t offset)method407,9351
method(MCSelect, int, waitForFdsetChange, xxx)method418,9476
method(MCSelect, void, addFd, MCSelect_fd_type type, int fd)method431,9870
method(MCSelect, void, removeFd, MCSelect_fd_type type, int fd)method447,10202
method(MCSelect, int, isFdReady, MCSelect_fd_type type, int fd)method462,10499

src/lemontea/MCIO.h,2130
#define MCFile_MCFile_21,320
monkc(MCFile);MCFile23,337
	int fd;fd24,352
	char* pathname;pathname25,361
	void* buffer;buffer26,378
	struct stat attribute;attribute27,393
end(MCFile);MCFile28,417
typedef enum _MCStreamType{_MCStreamType78,2186
	readonly_fullbuffered,readonly_fullbuffered79,2214
	readwrite_fullbuffered,readwrite_fullbuffered80,2238
	readonly_linebuffered,readonly_linebuffered81,2263
	readwrite_linebufferedreadwrite_linebuffered82,2287
}MCStreamType;MCStreamType83,2311
#define MCStream_MCStream_86,2391
monkc(MCStream);MCStream88,2410
	FILE* fileObject;fileObject89,2427
end(MCStream);MCStream90,2446
#define MCByteStream_MCByteStream_118,3443
monkc(MCByteStream) extends(MCStream);MCStream120,3466
end(MCByteStream);MCByteStream121,3505
#define MCStdinStream_MCStdinStream_130,3696
monkc(MCStdinStream) extends(MCStream);MCStream132,3720
end(MCStdinStream);MCStdinStream133,3760
#define MCStdoutStream_MCStdoutStream_141,3874
monkc(MCStdoutStream) extends(MCStream);MCStream143,3899
end(MCStdoutStream);MCStdoutStream144,3940
#define MCStdoutStream_MCStdoutStream_152,4056
monkc(MCStdoutStream) extends(MCStream);MCStream154,4081
end(MCStdoutStream);MCStdoutStream155,4122
#define MCStderrStream_MCStderrStream_161,4216
monkc(MCStderrStream) extends(MCStream);MCStream163,4241
end(MCStderrStream);MCStderrStream164,4282
typedef enum _MCSelect_fd_type{_MCSelect_fd_type171,4368
	MCSelect_Readfd,MCSelect_Readfd172,4400
	MCSelect_Writefd,MCSelect_Writefd173,4418
	MCSelect_Exceptionfd,MCSelect_Exceptionfd174,4437
}MCSelect_fd_type;MCSelect_fd_type175,4460
#define MCSelect_ MCSelect_178,4498
monkc(MCSelect);MCSelect180,4518
	int maxfd;maxfd181,4535
	fd_set readfd_set;readfd_set182,4547
	fd_set writefd_set;writefd_set183,4567
	fd_set exceptionfd_set;exceptionfd_set184,4588
	fd_set readfd_result_set;readfd_result_set185,4613
	fd_set writefd_result_set;writefd_result_set186,4640
	fd_set exceptionfd_result_set;exceptionfd_result_set187,4668
	struct timeval timeout;timeout188,4700
end(MCSelect);MCSelect189,4725

src/lemontea/MCMath.c,162
loader(MCMath)loader3,21
initer(MCMath)initer10,139
method(MCMath, void, bye, xxx)method16,187
method(MCMath, int, addInteger2, int a, int b)method21,261

src/lemontea/MCMath.h,105
#define MCMath_MCMath_4,41
monkc(MCMath);MCMath6,58
	unsigned tid;tid7,73
end(MCMath);MCMath8,88

src/lemontea/MCProcess.c,1123
initer(MCProcess)initer3,24
method(MCProcess, void, printIDs, xxx)method14,186
method(MCProcess, int, fork, xxx)method20,356
method(MCProcess, int, registerAtExitCallback, void (*func)(void))method28,504
method(MCProcess, void, exitWithStatus, int status)method36,644
method(MCProcess, pid_t, waitAnyChildExit, int* statusAddr)method42,742
method(MCProcess, pid_t, waitPIDChildExit, pid_t pid, int* statusAddr, int options)method47,833
method(MCProcess, int, isChildExitNormal, int status)method52,965
method(MCProcess, int, getChildExitLowOrder8Bit, int status)method60,1077
method(MCProcess, int, isChildExitBySignal, int status)method65,1172
method(MCProcess, int, getChildTerminateSignal, int status)method73,1289
method(MCProcess, int, isCoreDumpFileGenerated, int status)method78,1380
method(MCProcess, int, isChildStopped, int status)method83,1472
method(MCProcess, int, getChildStopSignal, int status)method91,1583
method(MCProcess, int, isChildContinued, int status)method96,1669
method(MCProcess, method104,1783
method(MCProcess, method111,1962
loader(MCProcess)loader118,2157

src/lemontea/MCProcess.h,681
#define MCProcess_ MCProcess_14,209
monkc(MCProcess);MCProcess16,230
	pid_t pid;pid17,248
	pid_t ppid;ppid18,260
	uid_t uid;uid19,273
	uid_t euid;euid20,285
	gid_t gid;gid21,298
	gid_t egid;egid22,310
end(MCProcess);MCProcess23,323
	wait_no_option=0,wait_no_option35,697
	wait_continued=WCONTINUED,wait_continued36,716
	wait_no_hang=WNOHANG,wait_no_hang37,744
	wait_untraced=WUNTRACEDwait_untraced40,902
}MCProcessOptions;MCProcessOptions43,1108
typedef struct MCProcessRUseage_struct {MCProcessRUseage_struct59,1707
    struct rusage* rusage_p;rusage_p60,1748
    char* description;description61,1777
} MCProcessRUseage;MCProcessRUseage62,1800

src/lemontea/MCSocket.c,999
loader(MCSocketClientInfo)loader5,124
initer(MCSocketClientInfo)initer12,267
method(MCSocketClientInfo, void, dumpInfo, xxx)method18,331
method(MCSocketClientInfo, void, bye, xxx)method23,440
loader(MCSocket)loader28,505
initer(MCSocket)initer43,1007
method(MCSocket, MCSocket*, initWithTypeIpPort, MCSocketType socket_type, char* ip, char* port)method49,1061
static void create_and_bind_socket(MCSocket* this, MCSocketType socket_type, char* ip, char* port)create_and_bind_socket55,1228
method(MCSocket, void, bye, xxx)method122,2943
method(MCSocket, int, listeningStart, xxx)method131,3044
method(MCSocket, MCSocketClientInfo*, acceptARequest, xxx)method137,3173
method(MCSocket, void, recv, xxx)method145,3441
method(MCSocket, void, recvfrom, xxx)method149,3480
method(MCSocket, void, recvmsg, xxx)method153,3523
method(MCSocket, void, send, xxx)method157,3565
method(MCSocket, void, sendto, xxx)method161,3604
method(MCSocket, void, sendmsg, xxx)method165,3645

src/lemontea/MCSocket.h,856
#define MCSocket_Queue_Length MCSocket_Queue_Length137,4247
typedef enum _MCSocketType{_MCSocketType138,4280
	MCSocket_Server_TCP,MCSocket_Server_TCP139,4308
	MCSocket_Server_UDP,MCSocket_Server_UDP140,4330
	MCSocket_Client_TCP,MCSocket_Client_TCP141,4352
	MCSocket_Client_UDP,MCSocket_Client_UDP142,4374
}MCSocketType;MCSocketType143,4396
#define MCSocketClientInfo_MCSocketClientInfo_146,4440
monkc(MCSocketClientInfo);MCSocketClientInfo148,4469
	int returnSfd;returnSfd149,4496
	struct sockaddr address;address150,4512
	socklen_t address_len;address_len151,4538
end(MCSocketClientInfo);MCSocketClientInfo152,4562
#define MCSocket_MCSocket_159,4708
monkc(MCSocket);MCSocket161,4727
	int sfd;sfd162,4744
	int isServer;isServer163,4754
	struct addrinfo peeraddrinfo;peeraddrinfo164,4769
end(MCSocket);MCSocket165,4800

src/lemontea/MCString.c,983
static int block_size = 1024;block_size3,23
initer(MCString)initer4,53
method(MCString, void, bye, xxx)method11,156
method(MCString, MCString*, initWithCString, char* str)method17,250
MCString* MCString_newWithCString(char* cstr)MCString_newWithCString25,410
MCString* MCString_newWithMCString(MCString* mcstr)MCString_newWithMCString30,511
MCString* MCString_newForHttp(char* cstr, int isHttps)MCString_newForHttp35,625
static char get_one_char()get_one_char47,867
static void get_chars_until_enter(char resultString[])get_chars_until_enter54,974
method(MCString, void, add, char* str)method65,1139
method(MCString, void, print, xxx)method78,1535
method(MCString, const char*, toCString, char const buff[])method83,1601
method(MCString, int, equalTo, MCString* stringToComp)method89,1719
method(MCString, char, getOneChar, xxx)method99,1878
method(MCString, void, getCharsUntilEnter, char resultString[])method104,1947
loader(MCString)loader109,2054

src/lemontea/MCString.h,174
#define MCString_MCString_5,62
monkc(MCString);MCString7,81
	size_t length;length8,98
	size_t size; size9,114
	char* buff;buff10,129
end(MCString);MCString11,142

src/lemontea/MCThread.c,876
loader(MCRunnable)loader7,43
initer(MCRunnable)initer14,208
method(MCRunnable, MCRunnable*, initWithFunctionPointer, void (*init_routine)(void))method20,269
method(MCRunnable, void, run, xxx)method26,407
loader(MCThread)loader33,477
initer(MCThread)initer42,716
method(MCThread, MCThread*, initWithRunnable, MCRunnable* runnable)method54,1039
int MCThread_join(MCThread* thread, void** result)MCThread_join66,1273
int MCThread_detach(MCThread* thread)MCThread_detach71,1373
int MCThread_cancel(MCThread* thread)MCThread_cancel76,1454
void MCThread_stop(void* result)MCThread_stop82,1584
pthread_t MCThread_self()MCThread_self87,1645
static void* fireRun(void* obj)fireRun94,1799
method(MCThread, int, start, void* result)method101,1972
method(MCThread, int, equal, MCThread* thread)method126,2622
method(MCThread, void, bye, xxx)method131,2722

src/lemontea/MCThread.h,1508
#define MCMutexLockNew(MCMutexLockNew76,1931
#define MCMutexAttrNew(MCMutexAttrNew77,1988
#define MCMutexLockStaticInitializer MCMutexLockStaticInitializer78,2049
#define MCMutexLockInit(MCMutexLockInit79,2117
#define MCMutexLockDestroy(MCMutexLockDestroy80,2190
#define MCMutexLock(MCMutexLock82,2259
#define MCMutexTrylock(MCMutexTrylock83,2319
#define MCMutexUnlock(MCMutexUnlock84,2384
#define MCSpinLockInit(MCSpinLockInit87,2487
#define MCSpinLockDestroy(MCSpinLockDestroy90,2695
#define MCSpinLock(MCSpinLock91,2761
#define MCSpinTrylock(MCSpinTrylock92,2819
#define MCSpinUnlock(MCSpinUnlock93,2882
#define MCCondLockNew(MCCondLockNew95,2945
#define MCCondAttrNew(MCCondAttrNew96,3000
#define MCCondLockStaticInitializer MCCondLockStaticInitializer97,3059
#define MCCondLockInit(MCCondLockInit98,3125
#define MCCondLockDestroy(MCCondLockDestroy99,3197
#define MCCondWait(MCCondWait101,3264
#define MCCondSignal(MCCondSignal102,3335
#define MCCondBroadcast(MCCondBroadcast103,3397
#define MCRunnable_MCRunnable_110,3505
monkc(MCRunnable);MCRunnable112,3526
	void (*init_routine)(void);init_routine113,3545
end(MCRunnable);MCRunnable114,3574
#define MCThread_MCThread_125,3759
monkc(MCThread);MCThread127,3778
	pthread_t self;self128,3795
	pthread_attr_t attribute;attribute129,3812
	pthread_once_t once_control;once_control130,3839
	int isRunOnce;isRunOnce131,3869
	MCRunnable* runnable;runnable132,3885
end(MCThread);MCThread133,3908

src/lemontea/MCUnitTest.c,2041
void assertYES(int expression) throws(MCAssertYESException)throws4,48
void assertNO(int expression) throws(MCAssertNOException)throws10,166
void assertNil(void* ptr) throws(MCAssertNilException)throws16,281
void assertNotNil(void* ptr) throws(MCAssertNotNilException)throws22,387
void assertSame(mo obj1, mo obj2) throws(MCAssertSameException)throws28,502
void assertNotSame(mo obj1, mo obj2) throws(MCAssertNotSameException)throws34,620
void assertEquals(int exp1, int exp2) throws(MCAssertEqualsException)throws40,747
void fail(char* message)fail46,877
loader(MCUnitTestCase)loader55,964
initer(MCUnitTestCase)initer66,1340
method(MCUnitTestCase, MCUnitTestCase*, initWithTestResult, MCUnitTestResult* resultRef)method72,1404
method(MCUnitTestCase, void, bye, xxx)method83,1634
method(MCUnitTestCase, void, setUp, xxx)method89,1749
method(MCUnitTestCase, void, tearDown, xxx)method95,1857
static void runMethodByPointer(MCUnitTestCase* obj, mc_hashitem* amethod)runMethodByPointer101,1974
method(MCUnitTestCase, void, runTests, xxx)method138,2904
method(MCUnitTestCase, void, runATestMethod, char* methodName)method171,3778
loader(MCUnitTestSuite)loader178,3932
initer(MCUnitTestSuite)initer186,4139
method(MCUnitTestSuite, void, bye, xxx)method195,4299
method(MCUnitTestSuite, void, addTestCase, MCUnitTestCase* volatile tcase)method202,4460
method(MCUnitTestSuite, void, runTestCases, xxx)method210,4669
loader(MCUnitTestResult)loader224,5004
initer(MCUnitTestResult)initer232,5221
method(MCUnitTestResult, void, bye, xxx)method238,5283
method(MCUnitTestResult, void, addSuccessInfo, char* succinfo)method243,5349
method(MCUnitTestResult, void, addFailInfo, char* failinfo)method248,5421
loader(MCUnitTestRunner)loader263,5710
initer(MCUnitTestRunner)initer271,5928
method(MCUnitTestRunner, void, bye, xxx)method278,6024
method(MCUnitTestRunner, void, addTestSuite, MCUnitTestSuite* testSuite)method285,6189
method(MCUnitTestRunner, void, runTestSuites, xxx)method294,6434

src/lemontea/MCUnitTest.h,1720
void assertYES(int expression) throws(MCAssertYESException);MCAssertYESException7,213
void assertNO(int expression) throws(MCAssertNOException);MCAssertNOException8,274
void assertNil(void* ptr) throws(MCAssertNilException);MCAssertNilException9,333
void assertNotNil(void* ptr) throws(MCAssertNotNilException);MCAssertNotNilException10,389
void assertSame(mo obj1, mo obj2) throws(MCAssertSameException);MCAssertSameException11,451
void assertNotSame(mo obj1, mo obj2) throws(MCAssertNotSameException);MCAssertNotSameException12,516
void assertEquals(int exp1, int exp2) throws(MCAssertEqualsException);MCAssertEqualsException13,587
#define MCUnitTestResult_MCUnitTestResult_19,730
monkc(MCUnitTestResult);MCUnitTestResult21,758
end(MCUnitTestResult);MCUnitTestResult22,783
#define MCUnitTestCase_ MCUnitTestCase_32,1023
monkc(MCUnitTestCase);MCUnitTestCase34,1049
	MCUnitTestResult* unitTestResultRef;unitTestResultRef35,1072
	struct MCUnitTestCase_struct* next_case;next_case36,1110
end(MCUnitTestCase);MCUnitTestCase37,1152
#define MCUnitTestSuite_MCUnitTestSuite_50,1551
monkc(MCUnitTestSuite);MCUnitTestSuite52,1577
	MCUnitTestCase *first_case;first_case53,1601
    MCUnitTestCase **last_case_p;last_case_p54,1630
	int test_case_count;test_case_count55,1664
	struct MCUnitTestSuite_struct* next_suite;next_suite56,1686
end(MCUnitTestSuite);MCUnitTestSuite57,1730
#define MCUnitTestRunner_MCUnitTestRunner_67,1973
monkc(MCUnitTestRunner);MCUnitTestRunner69,2000
	MCUnitTestResult* unitTestResult;unitTestResult70,2025
	MCUnitTestSuite* first_suite;first_suite71,2060
	int test_suite_count;test_suite_count72,2091
end(MCUnitTestRunner);MCUnitTestRunner73,2114

src/lemontea/MCVector.c,1616
static int current_vector = 0;current_vector7,66
static int current_vector2 = 0;current_vector28,97
static int current_vector3 = 0;current_vector39,129
static int current_vector4 = 0;current_vector410,161
static vector_struct vector_stack[VEC_STACK_SIZE];vector_stack12,194
static vector2_struct vector2_stack[VEC_STACK_SIZE];vector2_stack13,245
static vector3_struct vector3_stack[VEC_STACK_SIZE];vector3_stack14,298
static vector4_struct vector4_stack[VEC_STACK_SIZE];vector4_stack15,351
void _init_vector_stack()_init_vector_stack17,405
vector pushv(double x)pushv34,739
vector2 pushv2(double x, double y)pushv247,963
vector3 pushv3(double x, double y, double z)pushv360,1211
vector4 pushv4(double x, double y, double z, double t)pushv473,1472
static int current_wector = 0;current_wector87,1798
static int current_wector2 = 0;current_wector288,1829
static int current_wector3 = 0;current_wector389,1861
static int current_wector4 = 0;current_wector490,1893
static wector_struct wector_stack[VEC_STACK_SIZE];wector_stack92,1926
static wector2_struct wector2_stack[VEC_STACK_SIZE];wector2_stack93,1977
static wector3_struct wector3_stack[VEC_STACK_SIZE];wector3_stack94,2030
static wector4_struct wector4_stack[VEC_STACK_SIZE];wector4_stack95,2083
void _init_wector_stack()_init_wector_stack97,2137
wector pushw(long double x)pushw114,2471
wector2 pushw2(long double x, long double y)pushw2127,2700
wector3 pushw3(long double x, long double y, long double z)pushw3140,2958
wector4 pushw4(long double x, long double y, long double z, long double t)pushw4153,3234

src/lemontea/MCVector.h,1417
#define VEC_STACK_SIZE VEC_STACK_SIZE5,41
	double x;x10,102
}vector_struct;vector_struct11,113
typedef vector_struct* vector;vector12,129
	double x;x15,177
	double y;y16,188
}vector2_struct;vector2_struct17,199
typedef vector2_struct* vector2;vector218,216
	double x;x21,266
	double y;y22,277
	double z;z23,288
}vector3_struct;vector3_struct24,299
typedef vector3_struct* vector3;vector325,316
	double x;x28,366
	double y;y29,377
	double z;z30,388
	double t;t31,399
}vector4_struct;vector4_struct32,410
typedef vector4_struct* vector4;vector433,427
#define popvx(popvx40,624
#define popvy(popvy41,650
#define popvz(popvz42,676
#define popvt(popvt43,702
	long double x;x47,791
}wector_struct;wector_struct48,807
typedef wector_struct* wector;wector49,823
	long double x;x52,871
	long double y;y53,887
}wector2_struct;wector2_struct54,903
typedef wector2_struct* wector2;wector255,920
	long double x;x58,970
	long double y;y59,986
	long double z;z60,1002
}wector3_struct;wector3_struct61,1018
typedef wector3_struct* wector3;wector362,1035
	long double x;x65,1085
	long double y;y66,1101
	long double z;z67,1117
	long double t;t68,1133
}wector4_struct;wector4_struct69,1149
typedef wector4_struct* wector4;wector470,1166
#define popwx(popwx77,1413
#define popwy(popwy78,1439
#define popwz(popwz79,1465
#define popwt(popwt80,1491

src/lemontea/Makefile,233
SRCS=$(wildcard *.c)SRCS1,0
LIBOBJS=$(patsubst %.c, %.o, $(SRCS))LIBOBJS2,21
LINK_HEAD = -I/usr/local/include/monkc -I/usr/local/include/lemonteaLINK_HEAD4,60
CC = gcc -g -w -Wall -Wno-unused-variable -Wno-return-typeCC7,188

src/lemontea/lemontea/MCArray.h,199
#define MCARRAY_H_MCARRAY_H_4,43
monkc(MCArray);MCArray6,63
	int count;count7,79
	int size;size8,91
	int indexLast;indexLast9,102
	void* (*buff)[];buff10,118
end(MCArray);MCArray11,136

src/lemontea/lemontea/MCUnitTest.h,1720
void assertYES(int expression) throws(MCAssertYESException);MCAssertYESException7,213
void assertNO(int expression) throws(MCAssertNOException);MCAssertNOException8,274
void assertNil(void* ptr) throws(MCAssertNilException);MCAssertNilException9,333
void assertNotNil(void* ptr) throws(MCAssertNotNilException);MCAssertNotNilException10,389
void assertSame(mo obj1, mo obj2) throws(MCAssertSameException);MCAssertSameException11,451
void assertNotSame(mo obj1, mo obj2) throws(MCAssertNotSameException);MCAssertNotSameException12,516
void assertEquals(int exp1, int exp2) throws(MCAssertEqualsException);MCAssertEqualsException13,587
#define MCUnitTestResult_MCUnitTestResult_19,730
monkc(MCUnitTestResult);MCUnitTestResult21,758
end(MCUnitTestResult);MCUnitTestResult22,783
#define MCUnitTestCase_ MCUnitTestCase_32,1023
monkc(MCUnitTestCase);MCUnitTestCase34,1049
	MCUnitTestResult* unitTestResultRef;unitTestResultRef35,1072
	struct MCUnitTestCase_struct* next_case;next_case36,1110
end(MCUnitTestCase);MCUnitTestCase37,1152
#define MCUnitTestSuite_MCUnitTestSuite_50,1551
monkc(MCUnitTestSuite);MCUnitTestSuite52,1577
	MCUnitTestCase *first_case;first_case53,1601
    MCUnitTestCase **last_case_p;last_case_p54,1630
	int test_case_count;test_case_count55,1664
	struct MCUnitTestSuite_struct* next_suite;next_suite56,1686
end(MCUnitTestSuite);MCUnitTestSuite57,1730
#define MCUnitTestRunner_MCUnitTestRunner_67,1973
monkc(MCUnitTestRunner);MCUnitTestRunner69,2000
	MCUnitTestResult* unitTestResult;unitTestResult70,2025
	MCUnitTestSuite* first_suite;first_suite71,2060
	int test_suite_count;test_suite_count72,2091
end(MCUnitTestRunner);MCUnitTestRunner73,2114

src/lemontea/lemontea/MCThread.h,1508
#define MCMutexLockNew(MCMutexLockNew76,1931
#define MCMutexAttrNew(MCMutexAttrNew77,1988
#define MCMutexLockStaticInitializer MCMutexLockStaticInitializer78,2049
#define MCMutexLockInit(MCMutexLockInit79,2117
#define MCMutexLockDestroy(MCMutexLockDestroy80,2190
#define MCMutexLock(MCMutexLock82,2259
#define MCMutexTrylock(MCMutexTrylock83,2319
#define MCMutexUnlock(MCMutexUnlock84,2384
#define MCSpinLockInit(MCSpinLockInit87,2487
#define MCSpinLockDestroy(MCSpinLockDestroy90,2695
#define MCSpinLock(MCSpinLock91,2761
#define MCSpinTrylock(MCSpinTrylock92,2819
#define MCSpinUnlock(MCSpinUnlock93,2882
#define MCCondLockNew(MCCondLockNew95,2945
#define MCCondAttrNew(MCCondAttrNew96,3000
#define MCCondLockStaticInitializer MCCondLockStaticInitializer97,3059
#define MCCondLockInit(MCCondLockInit98,3125
#define MCCondLockDestroy(MCCondLockDestroy99,3197
#define MCCondWait(MCCondWait101,3264
#define MCCondSignal(MCCondSignal102,3335
#define MCCondBroadcast(MCCondBroadcast103,3397
#define MCRunnable_MCRunnable_110,3505
monkc(MCRunnable);MCRunnable112,3526
	void (*init_routine)(void);init_routine113,3545
end(MCRunnable);MCRunnable114,3574
#define MCThread_MCThread_125,3759
monkc(MCThread);MCThread127,3778
	pthread_t self;self128,3795
	pthread_attr_t attribute;attribute129,3812
	pthread_once_t once_control;once_control130,3839
	int isRunOnce;isRunOnce131,3869
	MCRunnable* runnable;runnable132,3885
end(MCThread);MCThread133,3908

src/lemontea/lemontea/MCString.h,174
#define MCString_MCString_5,62
monkc(MCString);MCString7,81
	size_t length;length8,98
	size_t size; size9,114
	char* buff;buff10,129
end(MCString);MCString11,142

src/lemontea/lemontea/MCSocket.h,856
#define MCSocket_Queue_Length MCSocket_Queue_Length137,4247
typedef enum _MCSocketType{_MCSocketType138,4280
	MCSocket_Server_TCP,MCSocket_Server_TCP139,4308
	MCSocket_Server_UDP,MCSocket_Server_UDP140,4330
	MCSocket_Client_TCP,MCSocket_Client_TCP141,4352
	MCSocket_Client_UDP,MCSocket_Client_UDP142,4374
}MCSocketType;MCSocketType143,4396
#define MCSocketClientInfo_MCSocketClientInfo_146,4440
monkc(MCSocketClientInfo);MCSocketClientInfo148,4469
	int returnSfd;returnSfd149,4496
	struct sockaddr address;address150,4512
	socklen_t address_len;address_len151,4538
end(MCSocketClientInfo);MCSocketClientInfo152,4562
#define MCSocket_MCSocket_159,4708
monkc(MCSocket);MCSocket161,4727
	int sfd;sfd162,4744
	int isServer;isServer163,4754
	struct addrinfo peeraddrinfo;peeraddrinfo164,4769
end(MCSocket);MCSocket165,4800

src/lemontea/lemontea/MCProcess.h,681
#define MCProcess_ MCProcess_14,209
monkc(MCProcess);MCProcess16,230
	pid_t pid;pid17,248
	pid_t ppid;ppid18,260
	uid_t uid;uid19,273
	uid_t euid;euid20,285
	gid_t gid;gid21,298
	gid_t egid;egid22,310
end(MCProcess);MCProcess23,323
	wait_no_option=0,wait_no_option35,697
	wait_continued=WCONTINUED,wait_continued36,716
	wait_no_hang=WNOHANG,wait_no_hang37,744
	wait_untraced=WUNTRACEDwait_untraced40,902
}MCProcessOptions;MCProcessOptions43,1108
typedef struct MCProcessRUseage_struct {MCProcessRUseage_struct59,1707
    struct rusage* rusage_p;rusage_p60,1748
    char* description;description61,1777
} MCProcessRUseage;MCProcessRUseage62,1800

src/lemontea/lemontea/MCMath.h,105
#define MCMath_MCMath_4,41
monkc(MCMath);MCMath6,58
	unsigned tid;tid7,73
end(MCMath);MCMath8,88

src/lemontea/lemontea/MCIO.h,2130
#define MCFile_MCFile_21,320
monkc(MCFile);MCFile23,337
	int fd;fd24,352
	char* pathname;pathname25,361
	void* buffer;buffer26,378
	struct stat attribute;attribute27,393
end(MCFile);MCFile28,417
typedef enum _MCStreamType{_MCStreamType78,2186
	readonly_fullbuffered,readonly_fullbuffered79,2214
	readwrite_fullbuffered,readwrite_fullbuffered80,2238
	readonly_linebuffered,readonly_linebuffered81,2263
	readwrite_linebufferedreadwrite_linebuffered82,2287
}MCStreamType;MCStreamType83,2311
#define MCStream_MCStream_86,2391
monkc(MCStream);MCStream88,2410
	FILE* fileObject;fileObject89,2427
end(MCStream);MCStream90,2446
#define MCByteStream_MCByteStream_118,3443
monkc(MCByteStream) extends(MCStream);MCStream120,3466
end(MCByteStream);MCByteStream121,3505
#define MCStdinStream_MCStdinStream_130,3696
monkc(MCStdinStream) extends(MCStream);MCStream132,3720
end(MCStdinStream);MCStdinStream133,3760
#define MCStdoutStream_MCStdoutStream_141,3874
monkc(MCStdoutStream) extends(MCStream);MCStream143,3899
end(MCStdoutStream);MCStdoutStream144,3940
#define MCStdoutStream_MCStdoutStream_152,4056
monkc(MCStdoutStream) extends(MCStream);MCStream154,4081
end(MCStdoutStream);MCStdoutStream155,4122
#define MCStderrStream_MCStderrStream_161,4216
monkc(MCStderrStream) extends(MCStream);MCStream163,4241
end(MCStderrStream);MCStderrStream164,4282
typedef enum _MCSelect_fd_type{_MCSelect_fd_type171,4368
	MCSelect_Readfd,MCSelect_Readfd172,4400
	MCSelect_Writefd,MCSelect_Writefd173,4418
	MCSelect_Exceptionfd,MCSelect_Exceptionfd174,4437
}MCSelect_fd_type;MCSelect_fd_type175,4460
#define MCSelect_ MCSelect_178,4498
monkc(MCSelect);MCSelect180,4518
	int maxfd;maxfd181,4535
	fd_set readfd_set;readfd_set182,4547
	fd_set writefd_set;writefd_set183,4567
	fd_set exceptionfd_set;exceptionfd_set184,4588
	fd_set readfd_result_set;readfd_result_set185,4613
	fd_set writefd_result_set;writefd_result_set186,4640
	fd_set exceptionfd_result_set;exceptionfd_result_set187,4668
	struct timeval timeout;timeout188,4700
end(MCSelect);MCSelect189,4725

src/lemontea/lemontea/MCException.h,386
#define _MCException_MCException6,85
#define __exception_try_not_called __exception_try_not_called8,107
#define __MCNoneException __MCNoneException13,244
#define __ECODE(__ECODE14,272
#define throws(throws19,383
#define throw(throw20,405
#define try try22,514
#define catch(catch23,627
#define finally finally24,689
#define MAX_EXCEPTION_NUM MAX_EXCEPTION_NUM26,750

src/lemontea/lemontea/MCContext.h,189
#define MCContext_MCContext_5,59
monkc(MCContext);MCContext7,79
	int argc;argc8,97
	char** argv;argv9,108
	char selectionChar;selectionChar10,122
end(MCContext);MCContext11,143

src/lemontea/lemontea/MCClock.h,751
#define MCClock_MCClock_5,59
monkc(MCClock);MCClock7,77
	struct tm rawtime;rawtime8,93
end(MCClock);MCClock9,113
#define no_change no_change41,1558
enum weekday {weekday42,1582
	SUN, //SUNDAY,SUN43,1597
	MON, //MONDAY,MON44,1613
	TUE, //TUESDAY,TUE45,1629
	WED, //WEDNESDAY,WED46,1646
	THU, //THURSDAY,THU47,1665
	FRI, //FRIDAY,FRI48,1683
	SAT, //SATURDAY,SAT49,1699
enum month {month52,1721
	JAN, //JANUARY,JAN53,1734
	FEB, //FEBRUARY,FEB54,1751
	MAR, //MARCH,MAR55,1769
	APR, //APRIL,APR56,1784
	MAY,MAY57,1799
	JUN, //JUNE,JUN58,1805
	JUL, //JULY,JUL59,1819
	AUG, //AUGUST,AUG60,1833
	SEP, //SEPTEMBER,SEP61,1849
	OCT, //OCTOBER,OCT62,1868
	NOV, //NOVEMBER,NOV63,1885
	DEC, //DECEMBER,DEC64,1903

src/lemontea/lemontea/MCBuffer.h,479
#define _MCBuffer_MCBuffer2,18
	size_t size;size7,96
	char data[];data8,110
}MCCharBuffer;MCCharBuffer9,124
	size_t size;size12,157
	int data[];data13,171
}MCIntBuffer;MCIntBuffer14,184
	size_t size;size17,216
	unsigned data[];data18,230
}MCUnsignedBuffer;MCUnsignedBuffer19,248
	size_t size;size22,285
	long data[];data23,299
}MCLongBuffer;MCLongBuffer24,313
	size_t size;size27,346
	double data[];data28,360
}MCDoubleBuffer;MCDoubleBuffer29,376

src/lemontea/lemontea/MCVector.h,1417
#define VEC_STACK_SIZE VEC_STACK_SIZE5,41
	double x;x10,102
}vector_struct;vector_struct11,113
typedef vector_struct* vector;vector12,129
	double x;x15,177
	double y;y16,188
}vector2_struct;vector2_struct17,199
typedef vector2_struct* vector2;vector218,216
	double x;x21,266
	double y;y22,277
	double z;z23,288
}vector3_struct;vector3_struct24,299
typedef vector3_struct* vector3;vector325,316
	double x;x28,366
	double y;y29,377
	double z;z30,388
	double t;t31,399
}vector4_struct;vector4_struct32,410
typedef vector4_struct* vector4;vector433,427
#define popvx(popvx40,624
#define popvy(popvy41,650
#define popvz(popvz42,676
#define popvt(popvt43,702
	long double x;x47,791
}wector_struct;wector_struct48,807
typedef wector_struct* wector;wector49,823
	long double x;x52,871
	long double y;y53,887
}wector2_struct;wector2_struct54,903
typedef wector2_struct* wector2;wector255,920
	long double x;x58,970
	long double y;y59,986
	long double z;z60,1002
}wector3_struct;wector3_struct61,1018
typedef wector3_struct* wector3;wector362,1035
	long double x;x65,1085
	long double y;y66,1101
	long double z;z67,1117
	long double t;t68,1133
}wector4_struct;wector4_struct69,1149
typedef wector4_struct* wector4;wector470,1166
#define popwx(popwx77,1413
#define popwy(popwy78,1439
#define popwz(popwz79,1465
#define popwt(popwt80,1491

src/lemontea_GUI/src/MCAccessbleProtocol.h,0

src/lemontea_GUI/src/MCNode.c,592
initer(MCNode)initer6,90
protocol(MCAccessbleProtocol, void*, access, const char* varname)protocol20,339
protocol(MCTouchbleProtocol, void, onTouchEvent, MCPoint point)protocol32,767
method(MCNode, void, bye, xxx)method40,984
method(MCNode, MCNode*, initWithFrame, MCRect frame)method46,1063
method(MCNode, MCNode*, initWithSize, MCSize size)method52,1161
method(MCNode, MCNode*, addChild, MCNode* child)method58,1290
static inline MCRect calculate_drawframe(MCNode* obj)calculate_drawframe66,1456
method(MCNode, void, draw, xxx)method84,1986
loader(MCNode)loader103,2402

src/lemontea_GUI/src/MCNode.h,421
#define MCNode_MCNode_5,57
implements(MCTouchbleProtocol);MCTouchbleProtocol7,74
implements(MCAccessbleProtocol);MCAccessbleProtocol8,106
monkc(MCNode);MCNode9,139
    MCRect frame;frame11,209
    MCPoint anchor;anchor12,227
    MCPoint position;position13,247
    MCColor color;color14,269
    struct MCNode_struct *parent;parent15,288
    MCArray *children;children16,322
end(MCNode);MCNode17,345

src/lemontea_GUI/src/MCTouchbleProtocol.h,0

src/lemontea_GUI/src/MCUIBase.c,1019
inline MCPoint mc_point(double x, double y)mc_point4,24
inline MCPoint* mc_point_copy(MCPoint* A, MCPoint B)mc_point_copy10,119
inline MCSize mc_size(double width, double height)mc_size17,223
inline MCRect mc_rect(double x, double y, double width, double height)mc_rect23,333
inline int mc_rect_contains(MCRect* rect, MCPoint point)mc_rect_contains29,473
inline MCColor mc_color(unsigned R, unsigned G, unsigned B)mc_color39,764
inline MCColor mc_color_mix(MCColor A, MCColor B)mc_color_mix45,878
const MCPoint mc_point_zero = {0,0};mc_point_zero51,1000
const MCSize mc_size_zero   = {0,0};mc_size_zero52,1037
const MCRect mc_rect_zero   = {0,0,0,0};mc_rect_zero53,1074
const MCColor mc_color_white  = {255,255,255};mc_color_white55,1116
const MCColor mc_color_black  = {0,0,0};mc_color_black56,1163
const MCColor mc_color_red    = {255,0,0};mc_color_red57,1204
const MCColor mc_color_green  = {0,255,0};mc_color_green58,1247
const MCColor mc_color_blue   = {0,0,255};mc_color_blue59,1290

src/lemontea_GUI/src/MCUIBase.h,991
#define _MCUIBase__MCUIBase_4,39
typedef struct MCPoint_struct {MCPoint_struct6,59
    double x;x7,91
    double y;y8,105
} MCPoint;MCPoint9,119
typedef struct MCSize_struct {MCSize_struct11,131
    double width;width12,162
    double height;height13,180
} MCSize;MCSize14,199
typedef struct MCRect_struct {MCRect_struct16,210
    MCPoint origin;origin17,241
    MCSize size;size18,261
} MCRect;MCRect19,278
typedef struct MCColor_struct {MCColor_struct21,289
    unsigned R;R22,321
    unsigned G;G23,337
    unsigned B;B24,353
} MCColor;MCColor25,369
const MCPoint mc_point_zero;mc_point_zero37,833
const MCSize  mc_size_zero;mc_size_zero38,862
const MCRect  mc_rect_zero;mc_rect_zero39,890
const MCColor mc_color_white;mc_color_white41,919
const MCColor mc_color_black;mc_color_black42,949
const MCColor mc_color_red;mc_color_red43,979
const MCColor mc_color_green;mc_color_green44,1007
const MCColor mc_color_blue;mc_color_blue45,1037

src/lemontea_GUI/src/MCUIMainLoop.c,27
int main(void)main27,521

src/lemontea_GUI/src/MCXCBContext.c,1561
#define DEBUG_SCREEN_INFODEBUG_SCREEN_INFO3,27
static printScreenInfo(xcb_screen_t* screen)printScreenInfo25,662
initer(MCXCBContext)initer46,1770
static MCXCBContext* _instance = nil;_instance123,4393
MCXCBContext* MCXCBContext_instance()MCXCBContext_instance124,4431
void MCXCBContext_releaseInstance()MCXCBContext_releaseInstance132,4562
void MCXCBContext_flush()MCXCBContext_flush138,4648
MCColorReply* MCXCBContext_allocColor(MCColor color)MCXCBContext_allocColor143,4717
MCColorReply* MCXCBContext_allocColorFor(MCXCBContext* obj, MCColor color)MCXCBContext_allocColorFor148,4832
void MCXCBContext_fillRect(MCRect *rect)MCXCBContext_fillRect159,5239
void MCXCBContext_fillRectColor(MCRect *rect, MCColor color)MCXCBContext_fillRectColor174,5721
void MCXCBContext_clearRect(MCRect *rect)MCXCBContext_clearRect181,5979
void MCXCBContext_clear()MCXCBContext_clear186,6085
method(MCXCBContext, void, bye, xxx)method191,6191
method(MCXCBContext, MCXCBContext*, findMCXCBContext, xxx)method197,6289
method(MCXCBContext, void, updateAttribute, xxx)method202,6369
method(MCXCBContext, void, changeAttribute, MCXCBContextMask mask, const uint32_t *valuelist)method210,6603
method(MCXCBContext, void, registerTouchObserver, mo observer)method217,6806
method(MCXCBContext, void, unregisterTouchObserver, mo observer)method222,6934
static void visiter(_lamda, void* item, int index, void* data)visiter227,7067
method(MCXCBContext, void, notifyTouchObservers, MCPoint point)method234,7252
loader(MCXCBContext)loader246,7588

src/lemontea_GUI/src/MCXCBContext.h,1850
#define MCXCBContext_MCXCBContext_8,107
    GC_FUNCTION,GC_FUNCTION11,145
    GC_PLANE_MASK,GC_PLANE_MASK12,162
    GC_FOREGROUND,GC_FOREGROUND13,181
    GC_BACKGROUND,GC_BACKGROUND14,200
    GC_LINE_WIDTH,GC_LINE_WIDTH15,219
    GC_LINE_STYLE,GC_LINE_STYLE16,238
    GC_CAP_STYLE,GC_CAP_STYLE17,257
    GC_JOIN_STYLE,GC_JOIN_STYLE18,275
    GC_FILL_STYLE,GC_FILL_STYLE19,294
    GC_FILL_RULE,GC_FILL_RULE20,313
    GC_TILE,GC_TILE21,331
    GC_STIPPLE,GC_STIPPLE22,344
    GC_TILE_STIPPLE_ORIGIN_X,GC_TILE_STIPPLE_ORIGIN_X23,360
    GC_TILE_STIPPLE_ORIGIN_Y,GC_TILE_STIPPLE_ORIGIN_Y24,390
    GC_FONT,GC_FONT25,420
    GC_SUBWINDOW_MODE,GC_SUBWINDOW_MODE26,433
    GC_GRAPHICS_EXPOSURES,GC_GRAPHICS_EXPOSURES27,456
    GC_CLIP_ORIGIN_X,GC_CLIP_ORIGIN_X28,483
    GC_CLIP_ORIGIN_Y,GC_CLIP_ORIGIN_Y29,505
    GC_CLIP_MASK,GC_CLIP_MASK30,527
    GC_DASH_OFFSET,GC_DASH_OFFSET31,545
    GC_DASH_LIST,GC_DASH_LIST32,565
    GC_ARC_MODE,GC_ARC_MODE33,583
    GC_ENUM_MAXGC_ENUM_MAX34,600
} MCXCBContextMask;MCXCBContextMask35,616
typedef uint32_t                MCPixel;MCPixel37,637
typedef xcb_alloc_color_reply_t MCColorReply;MCColorReply38,678
typedef xcb_gcontext_t          MCUIAttribute;MCUIAttribute39,724
monkc(MCXCBContext);MCXCBContext41,772
    MCRect              winframe;winframe42,793
    MCColor             wincolor;wincolor43,827
    xcb_connection_t    *connection;connection44,861
    xcb_screen_t        *screen;screen45,898
    xcb_drawable_t      window;window46,931
    xcb_void_cookie_t   cookie;cookie47,963
    xcb_gcontext_t      gctx;gctx48,995
    uint32_t            mask;mask49,1025
    uint32_t            value[GC_ENUM_MAX];value50,1055
    MCArray*            touch_observers;touch_observers51,1099
end(MCXCBContext);MCXCBContext52,1140

src/lemontea_GUI/src/Makefile,365
OBJS = MCUIMainLoop.o MCUIBase.o MCNode.o MCXCBContext.oOBJS2,1
LINK_HEAD = -I/usr/local/include/monkc -I/usr/local/include/lemontea -I/usr/local/include/LINK_HEAD9,291
LINK_BIN = -lpthread -L/usr/local/lib -lmonkc -llemontea -lxcbLINK_BIN10,382
CC = clangCC12,446
FLAGS = -O -g -w -Wall -Wno-unused-variable -Wno-return-typeFLAGS13,457
AS = asAS14,518

src/monkc_buildtool/Makefile,38
BINPATH = /usr/local/bin/BINPATH1,0

src/monkc_preprocessor/Makefile,57
BINPATH = /usr/local/bin/BINPATH1,0
CC = clangCC2,26

src/monkc_preprocessor/mcpp.l,0

src/monkc_preprocessor/onbuilding/Makefile,38
BINPATH = /usr/local/bin/BINPATH1,0

src/monkc_preprocessor/onbuilding/mcpp.l,0

src/monkc_preprocessor/onbuilding/mcpp.y,949
expr				:	macro content end;expr35,489
macro				:	METHOD 	{printf("method\n");}macro36,518
content				:	single | list;content44,780
single				:	classname;single45,808
classname			:	ID {printf("classname is: %s\n", $1);};classname46,831
list				:	class_ret_met_arg | class_method_para;list47,885
class_ret_met_arg	:	ID COMMA ID COMMA ID COMMA argslist {printf("methodname is:%s ret-type:%s\n", $5, $3);};class_ret_met_arg48,934
argslist			:	argslist COMMA arg | arg | XXX {printf("type is xxx\n");};argslist49,1043
arg 				:	type ID {printf("arg is %s\n", $2);};arg50,1115
type				:	ID STAR {printf("type is %s*\n", $1);} | ID {printf("type is %s\n", $1);};type51,1163
class_method_para	:	ID COMMA ID COMMA paralist {printf("methodname is: %s\n", $3);};class_method_para52,1248
paralist			:	paralist COMMA para | para;paralist53,1333
para 				:	ID {printf("para is %s\n", $1);}| NUMBER;para54,1374
end 				:	PR;end55,1427

src/monkc_preprocessor/onbuilding/mcpp_parser.h,771
# define YYTOKENTYPEYYTOKENTYPE38,1615
   enum yytokentype {yytokentype41,1739
     METHOD = 258,METHOD42,1761
     BINDING = 259,BINDING43,1780
     FF = 260,FF44,1800
     NEW = 261,NEW45,1815
     CLASS = 262,CLASS46,1831
     IMPL = 263,IMPL47,1849
     EXTS = 264,EXTS48,1866
     ID = 265,ID49,1883
     NUMBER = 266,NUMBER50,1898
     XXX = 267,XXX51,1917
     PL = 268,PL52,1933
     PR = 269,PR53,1948
     COMMA = 270,COMMA54,1963
     STAR = 271STAR55,1981
typedef union YYSTYPEYYSTYPE62,2068
	int number;number68,2139
	char* string;string69,2152
} YYSTYPE;YYSTYPE75,2222
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL76,2233
# define yystype yystype77,2263
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED78,2325

src/monkc_preprocessor/onbuilding/t.c,236
Bird* b=new(Bird);b1,0
Bird* b2 = new(Bird);b22,19
Bird* b=new(Bird);b5,98
Bird* b=new(Bird);b8,145
Bird* b=new(Bird);b12,229
info(Bird);Bird15,274
clear(Bird);Bird16,286
Bird* bc = new_category(Bird, BirdCatA);bc17,299

src/monkc_preprocessor/t.c,236
Bird* b=new(Bird);b1,0
Bird* b2 = new(Bird);b22,19
Bird* b=new(Bird);b5,98
Bird* b=new(Bird);b8,145
Bird* b=new(Bird);b11,226
info(Bird);Bird14,271
clear(Bird);Bird15,283
Bird* bc = new_category(Bird, BirdCatA);bc16,296

src/monkc_preprocessor/lex.yy.c,9899
#define  YY_INT_ALIGNED YY_INT_ALIGNED4,21
#define FLEX_SCANNERFLEX_SCANNER8,99
#define YY_FLEX_MAJOR_VERSION YY_FLEX_MAJOR_VERSION9,120
#define YY_FLEX_MINOR_VERSION YY_FLEX_MINOR_VERSION10,152
#define YY_FLEX_SUBMINOR_VERSION YY_FLEX_SUBMINOR_VERSION11,184
#define FLEX_BETAFLEX_BETA13,253
#define	__STDC_LIMIT_MACROS__STDC_LIMIT_MACROS20,407
#define	__dead2__dead225,491
#define FLEXINT_HFLEXINT_H39,712
#define __STDC_LIMIT_MACROS __STDC_LIMIT_MACROS50,1055
typedef int8_t flex_int8_t;flex_int8_t54,1115
typedef uint8_t flex_uint8_t;flex_uint8_t55,1143
typedef int16_t flex_int16_t;flex_int16_t56,1173
typedef uint16_t flex_uint16_t;flex_uint16_t57,1203
typedef int32_t flex_int32_t;flex_int32_t58,1235
typedef uint32_t flex_uint32_t;flex_uint32_t59,1265
typedef signed char flex_int8_t;flex_int8_t61,1303
typedef short int flex_int16_t;flex_int16_t62,1336
typedef int flex_int32_t;flex_int32_t63,1368
typedef unsigned char flex_uint8_t; flex_uint8_t64,1394
typedef unsigned short int flex_uint16_t;flex_uint16_t65,1431
typedef unsigned int flex_uint32_t;flex_uint32_t66,1473
#define INT8_MIN INT8_MIN70,1559
#define INT16_MIN INT16_MIN73,1622
#define INT32_MIN INT32_MIN76,1689
#define INT8_MAX INT8_MAX79,1760
#define INT16_MAX INT16_MAX82,1822
#define INT32_MAX INT32_MAX85,1886
#define UINT8_MAX UINT8_MAX88,1955
#define UINT16_MAX UINT16_MAX91,2019
#define UINT32_MAX UINT32_MAX94,2085
#define YY_USE_CONSTYY_USE_CONST104,2255
#define YY_USE_CONSTYY_USE_CONST111,2376
#define yyconst yyconst117,2478
#define yyconstyyconst119,2506
#define YY_NULL YY_NULL123,2563
#define YY_SC_TO_UI(YY_SC_TO_UI130,2810
#define BEGIN BEGIN136,3041
#define YY_START YY_START142,3240
#define YYSTATE YYSTATE143,3280
#define YY_STATE_EOF(YY_STATE_EOF146,3363
#define YY_NEW_FILE YY_NEW_FILE149,3483
#define YY_END_OF_BUFFER_CHAR YY_END_OF_BUFFER_CHAR151,3522
#define YY_BUF_SIZE YY_BUF_SIZE155,3611
#define YY_STATE_BUF_SIZE YY_STATE_BUF_SIZE160,3739
#define YY_TYPEDEF_YY_BUFFER_STATEYY_TYPEDEF_YY_BUFFER_STATE163,3847
typedef struct yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE164,3882
#define YY_TYPEDEF_YY_SIZE_TYY_TYPEDEF_YY_SIZE_T168,3968
typedef size_t yy_size_t;yy_size_t169,3997
#define EOB_ACT_CONTINUE_SCAN EOB_ACT_CONTINUE_SCAN176,4085
#define EOB_ACT_END_OF_FILE EOB_ACT_END_OF_FILE177,4117
#define EOB_ACT_LAST_MATCH EOB_ACT_LAST_MATCH178,4147
    #define YY_LESS_LINENO(YY_LESS_LINENO180,4177
#define yyless(yyless183,4292
#define unput(unput196,4647
#define YY_STRUCT_YY_BUFFER_STATEYY_STRUCT_YY_BUFFER_STATE199,4727
struct yy_buffer_stateyy_buffer_state200,4761
	FILE *yy_input_file;yy_input_file202,4787
	char *yy_ch_buf;		/* input buffer */yy_ch_buf204,4810
	char *yy_buf_pos;		/* current position in input buffer */yy_buf_pos205,4848
	yy_size_t yy_buf_size;yy_buf_size210,4991
	yy_size_t yy_n_chars;yy_n_chars215,5101
	int yy_is_our_buffer;yy_is_our_buffer221,5269
	int yy_is_interactive;yy_is_interactive228,5507
	int yy_at_bol;yy_at_bol234,5674
    int yy_bs_lineno; /**< The line count. */yy_bs_lineno236,5691
    int yy_bs_column; /**< The column count. */yy_bs_column237,5737
	int yy_fill_buffer;yy_fill_buffer242,5872
	int yy_buffer_status;yy_buffer_status244,5894
#define YY_BUFFER_NEW YY_BUFFER_NEW246,5918
#define YY_BUFFER_NORMAL YY_BUFFER_NORMAL247,5942
#define YY_BUFFER_EOF_PENDING YY_BUFFER_EOF_PENDING258,6440
static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */yy_buffer_stack_top264,6548
static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */yy_buffer_stack_max265,6618
static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */yy_buffer_stack266,6684
#define YY_CURRENT_BUFFER YY_CURRENT_BUFFER274,6952
#define yy_current_buffer yy_current_buffer277,7105
#define YY_CURRENT_BUFFER_LVALUE YY_CURRENT_BUFFER_LVALUE282,7292
static char yy_hold_char;yy_hold_char285,7434
static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */yy_n_chars286,7460
yy_size_t yyleng;yyleng287,7537
static char *yy_c_buf_p = (char *) 0;yy_c_buf_p290,7601
static int yy_init = 0;		/* whether we need to initialize */yy_init291,7639
static int yy_start = 0;	/* start state number */yy_start292,7700
static int yy_did_buffer_switch_on_eof;yy_did_buffer_switch_on_eof297,7879
#define YY_FLUSH_BUFFER YY_FLUSH_BUFFER311,8399
#define yy_new_buffer yy_new_buffer321,8741
#define yy_set_interactive(yy_set_interactive323,8781
#define yy_set_bol(yy_set_bol333,9057
#define YY_AT_BOL(YY_AT_BOL343,9300
typedef unsigned char YY_CHAR;YY_CHAR347,9383
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;yyin349,9415
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;yyout349,9415
typedef int yy_state_type;yy_state_type351,9462
int yylineno = 1;yylineno355,9512
#define yytext_ptr yytext_ptr358,9552
#define YY_DO_BEFORE_ACTION YY_DO_BEFORE_ACTION368,9913
#define YY_NUM_RULES YY_NUM_RULES375,10076
#define YY_END_OF_BUFFER YY_END_OF_BUFFER376,10100
struct yy_trans_infoyy_trans_info379,10209
	flex_int32_t yy_verify;yy_verify381,10233
	flex_int32_t yy_nxt;yy_nxt382,10258
static yyconst flex_int16_t yy_accept[167] =yy_accept384,10284
static yyconst flex_int32_t yy_ec[256] =yy_ec406,11430
static yyconst flex_int32_t yy_meta[32] =yy_meta438,13152
static yyconst flex_int16_t yy_base[201] =yy_base446,13419
static yyconst flex_int16_t yy_def[201] =yy_def472,14783
static yyconst flex_int16_t yy_nxt[455] =yy_nxt498,16146
static yyconst flex_int16_t yy_chk[455] =yy_chk552,19165
static yy_state_type yy_last_accepting_state;yy_last_accepting_state606,22184
static char *yy_last_accepting_cpos;yy_last_accepting_cpos607,22230
int yy_flex_debug = 0;yy_flex_debug610,22294
#define REJECT REJECT615,22420
#define yymore(yymore616,22464
#define YY_MORE_ADJ YY_MORE_ADJ617,22510
#define YY_RESTORE_YY_MORE_OFFSETYY_RESTORE_YY_MORE_OFFSET618,22532
char *yytext;yytext619,22566
unsigned hash(const char *s)hash622,22614
char* uint2str(unsigned i)uint2str630,22750
char* hash_ff_method_name(char* in, int i)hash_ff_method_name637,22857
char* hash_binding_method_name(char* in, int i)hash_binding_method_name667,23586
char* hash_new_class_name(char* in, int i)hash_new_class_name695,24315
char* hash_new_category_class_name(char* in, int i)hash_new_category_class_name719,24899
#define MYP MYP743,25492
#define MYECHO MYECHO744,25557
#define MYECHO2 MYECHO2746,25674
#define MYECHO3 MYECHO3748,25796
#define MYECHO4 MYECHO4750,25913
#define INITIAL INITIAL755,26062
#define YY_EXTRA_TYPE YY_EXTRA_TYPE766,26364
#define YY_READ_BUF_SIZE YY_READ_BUF_SIZE836,27613
#define ECHO ECHO844,27831
#define YY_INPUT(YY_INPUT851,28041
#define yyterminate(yyterminate888,28955
#define YY_START_STACK_INCR YY_START_STACK_INCR893,29090
#define YY_FATAL_ERROR(YY_FATAL_ERROR898,29180
#define YY_DECL_IS_OURS YY_DECL_IS_OURS907,29413
#define YY_DECL YY_DECL911,29466
#define YY_USER_ACTIONYY_USER_ACTION918,29642
#define YY_BREAK YY_BREAK923,29735
#define YY_RULE_SETUP YY_RULE_SETUP926,29767
static int yy_get_next_buffer (void)yy_get_next_buffer1222,36379
    static yy_state_type yy_get_previous_state (void)yy_get_previous_state1356,39951
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )yy_try_NUL_trans1388,40826
    static void yyunput (int c, char * yy_bp )yyunput1412,41492
    static int yyinput (void)yyinput1452,42545
    void yyrestart  (FILE * input_file )yyrestart1529,44312
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )yy_switch_to_buffer1546,44673
static void yy_load_buffer_state  (void)yy_load_buffer_state1577,45516
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )yy_create_buffer1591,45989
    void yy_delete_buffer (YY_BUFFER_STATE  b )yy_delete_buffer1619,46680
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )yy_init_buffer1638,47129
    void yy_flush_buffer (YY_BUFFER_STATE  b )yy_flush_buffer1666,47862
void yypush_buffer_state (YY_BUFFER_STATE new_buffer )yypush_buffer_state1695,48548
void yypop_buffer_state (void)yypop_buffer_state1725,49313
static void yyensure_buffer_stack (void)yyensure_buffer_stack1744,49708
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )yy_scan_buffer1793,51330
YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )yy_scan_string1830,52403
YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )yy_scan_bytes1843,52820
#define YY_EXIT_FAILURE YY_EXIT_FAILURE1874,53555
static void yy_fatal_error (yyconst char* msg )yy_fatal_error1877,53589
#undef yylessyyless1885,53768
#define yyless(yyless1886,53782
int yyget_lineno  (void)yyget_lineno1905,54241
FILE *yyget_in  (void)yyget_in1914,54335
FILE *yyget_out  (void)yyget_out1922,54419
yy_size_t yyget_leng  (void)yyget_leng1930,54519
char *yyget_text  (void)yyget_text1939,54612
void yyset_lineno (int  line_number )yyset_lineno1948,54728
void yyset_in (FILE *  in_str )yyset_in1960,54953
void yyset_out (FILE *  out_str )yyset_out1965,55014
int yyget_debug  (void)yyget_debug1970,55079
void yyset_debug (int  bdebug )yyset_debug1975,55138
static int yy_init_globals (void)yy_init_globals1980,55208
int yylex_destroy  (void)yylex_destroy2009,55890
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )yy_flex_strncpy2035,56444
static int yy_flex_strlen (yyconst char * s )yy_flex_strlen2044,56596
void *yyalloc (yy_size_t  size )yyalloc2054,56704
void *yyrealloc  (void * ptr, yy_size_t  size )yyrealloc2059,56775
void yyfree (void * ptr )yyfree2071,57231
#define YYTABLES_NAME YYTABLES_NAME2076,57325
int yywrap(void)yywrap2082,57381
int main(int argc, char *argv[])main2087,57414

src/monkc_runtime/HashTable.c,1012
static const unsigned mc_hashtable_sizes[5] = {mc_hashtable_sizes30,1525
unsigned get_tablesize(const unsigned level)get_tablesize37,1695
unsigned hash(const char *s)hash48,1961
static mc_hashtable* expand_table(mc_hashtable** const table_p, unsigned tolevel)expand_table66,2319
void package_by_item(mc_hashitem** aitem_p, mc_class** aclass_p)package_by_item83,2966
mc_hashitem* new_item(const char* key, void* value)new_item89,3101
mc_hashitem* new_item_h(const char* key, void* value, const unsigned hashval)new_item_h94,3201
mc_hashtable* new_table(const unsigned initlevel)new_table115,3670
unsigned set_item(mc_hashtable** const table_p,set_item131,4052
mc_hashitem* get_item_bykey(mc_hashtable** const table_p, const char* key)get_item_bykey196,6270
mc_hashitem* get_item_byhash(mc_hashtable** const table_p, const unsigned hashval, const char* refkey)get_item_byhash207,6525
mc_hashitem* get_item_byindex(mc_hashtable** const table_p, const unsigned index)get_item_byindex246,7490

src/monkc_runtime/Key.c,77
int mc_compare_key(char* const dest, const char* src)mc_compare_key39,1752

src/monkc_runtime/Lock.c,112
void mc_trylock(volatile int* lock_p)mc_trylock30,1525
void mc_unlock(volatile int* lock_p)mc_unlock45,1776

src/monkc_runtime/Log.c,467
int LOG_LEVEL = MC_DEBUG;LOG_LEVEL35,1590
void error_log(char* volatile fmt, ...)error_log38,1646
void debug_log(char* volatile fmt, ...)debug_log52,1921
void runtime_log(char* volatile fmt, ...)runtime_log67,2235
void error_logt(char* volatile tag, char* volatile fmt, ...)error_logt83,2576
void debug_logt(char* volatile tag, char* volatile fmt, ...)debug_logt98,2917
void runtime_logt(char* volatile tag, char* volatile fmt, ...)runtime_logt114,3297

src/monkc_runtime/MCRuntimeAsm/MCRuntimeAsm_ARM32.asm,387
_push_jump:_push_jump39,1747
_clean_jump1:_clean_jump151,1842
_clean_jump2:_clean_jump264,1969
_clean_jump3:_clean_jump377,2097
_clean_jump4:_clean_jump494,2286
mc_atomic_get_integer:mc_atomic_get_integer125,2848
mc_atomic_get_pointer:mc_atomic_get_pointer133,2959
mc_atomic_set_integer:mc_atomic_set_integer141,3070
mc_atomic_set_pointer:mc_atomic_set_pointer150,3186

src/monkc_runtime/MCRuntimeAsm/MCRuntimeAsm_ARM64.asm,387
_push_jump:_push_jump39,1750
_clean_jump1:_clean_jump151,1845
_clean_jump2:_clean_jump264,1974
_clean_jump3:_clean_jump377,2104
_clean_jump4:_clean_jump494,2295
mc_atomic_get_integer:mc_atomic_get_integer125,2859
mc_atomic_get_pointer:mc_atomic_get_pointer133,2970
mc_atomic_set_integer:mc_atomic_set_integer141,3081
mc_atomic_set_pointer:mc_atomic_set_pointer150,3197

src/monkc_runtime/MCRuntimeAsm/MCRuntimeAsm_IA32.asm,388
_push_jump:_push_jump36,1653
_clean_jump1:_clean_jump147,1795
_clean_jump2:_clean_jump269,2295
_clean_jump3:_clean_jump393,2848
_clean_jump4:_clean_jump4119,3458
mc_atomic_get_integer:mc_atomic_get_integer151,4424
mc_atomic_get_pointer:mc_atomic_get_pointer166,4651
mc_atomic_set_integer:mc_atomic_set_integer181,4878
mc_atomic_set_pointer:mc_atomic_set_pointer208,5451

src/monkc_runtime/MCRuntimeAsm/MCRuntimeAsm_IA32_darwin.asm,406
__push_jump:__push_jump36,1654
__clean_jump1:__clean_jump147,1798
__clean_jump2:__clean_jump269,2300
__clean_jump3:__clean_jump393,2855
__clean_jump4:__clean_jump4119,3467
_mc_atomic_get_integer:_mc_atomic_get_integer152,4436
_mc_atomic_get_pointer:_mc_atomic_get_pointer167,4665
_mc_atomic_set_integer:_mc_atomic_set_integer182,4894
_mc_atomic_set_pointer:_mc_atomic_set_pointer209,5469

src/monkc_runtime/MCRuntimeAsm/MCRuntimeAsm_PowerPC64.S,247
_push_jump:_push_jump43,1795
mc_atomic_get_integer:mc_atomic_get_integer131,2932
mc_atomic_get_pointer:mc_atomic_get_pointer139,3027
mc_atomic_set_integer:mc_atomic_set_integer147,3122
mc_atomic_set_pointer:mc_atomic_set_pointer160,3244

src/monkc_runtime/MCRuntimeAsm/MCRuntimeAsm_X8664.asm,388
_push_jump:_push_jump51,2036
_clean_jump1:_clean_jump163,2222
_clean_jump2:_clean_jump276,2394
_clean_jump3:_clean_jump389,2566
_clean_jump4:_clean_jump4102,2738
mc_atomic_get_integer:mc_atomic_get_integer125,3281
mc_atomic_get_pointer:mc_atomic_get_pointer139,3485
mc_atomic_set_integer:mc_atomic_set_integer153,3689
mc_atomic_set_pointer:mc_atomic_set_pointer178,4139

src/monkc_runtime/MCRuntimeAsm/MCRuntimeAsm_X8664_darwin.asm,406
__push_jump:__push_jump51,2037
__clean_jump1:__clean_jump163,2225
__clean_jump2:__clean_jump276,2399
__clean_jump3:__clean_jump389,2573
__clean_jump4:__clean_jump4102,2747
_mc_atomic_get_integer:_mc_atomic_get_integer125,3292
_mc_atomic_get_pointer:_mc_atomic_get_pointer139,3498
_mc_atomic_set_integer:_mc_atomic_set_integer153,3704
_mc_atomic_set_pointer:_mc_atomic_set_pointer178,4156

src/monkc_runtime/Makefile,818
INCPATH=/usr/local/include/INCPATH1,0
LIBPATH=/usr/local/lib/LIBPATH2,28
SRCS=$(wildcard *.c)SRCS4,53
LIBOBJS=$(patsubst %.c, %.o, $(SRCS))LIBOBJS5,74
ARCH=$(strip $(shell uname -m))ARCH6,112
OS=$(strip $(shell uname -s))OS7,144
CC=gcc -g -WallCC10,217
AS=asAS11,233
ASMFILE=MCRuntimeAsm_IA32.asmASMFILE13,240
	ASMFILE=MCRuntimeAsm_X8664_darwin.asmASMFILE16,312
	ASMFILE=MCRuntimeAsm_IA32_darwin.asmASMFILE21,403
	ASMFILE=MCRuntimeAsm_IA32_darwin.asmASMFILE26,493
	ASMFILE=MCRuntimeAsm_X8664.asmASMFILE31,584
	ASMFILE=MCRuntimeAsm_X8664.asmASMFILE36,670
	ASMFILE=MCRuntimeAsm_PowerPC64.SASMFILE41,758
	ASMFILE=MCRuntimeAsm_IA32.asmASMFILE46,843
	ASMFILE=MCRuntimeAsm_IA32.asmASMFILE51,925
	ASMFILE=MCRuntimeAsm_ARM32.asmASMFILE55,990
	ASMFILE=MCRuntimeAsm_ARM64.asmASMFILE59,1055

src/monkc_runtime/Messaging.c,490
mc_message make_msg(mo const obj, const void* entry)make_msg30,1525
mc_message _self_response_to(const mo obj, const char* methodname)_self_response_to39,1703
mc_message _self_response_to_h(const mo obj, const char* methodname, unsigned hashval)_self_response_to_h46,1946
mc_message _response_to(const mo obj, const char* methodname, int strict)_response_to72,2699
mc_message _response_to_h(const mo obj, const char* methodname, unsigned hashval, int strict)_response_to_h77,2845

src/monkc_runtime/ObjectManage.c,1274
mc_block* alloc_mc_block()alloc_mc_block40,1663
mc_block* init_mc_block(mc_block* ablock, void* data)init_mc_block45,1740
mc_block* new_mc_block(void* data)new_mc_block52,1870
void package_by_block(mc_block* ablock, mc_object* aobject)package_by_block57,1957
mc_blockpool* new_mc_blockpool()new_mc_blockpool63,2085
void pushToTail(mc_blockpool* bpool, mc_block* ablock)pushToTail71,2244
mc_block* getFromHead(mc_blockpool* bpool)getFromHead87,2634
void empty(mc_blockpool* bpool)empty107,3034
int count(mc_blockpool* bpool)count117,3211
int cut(mc_blockpool* bpool, mc_block* ablock, mc_block** result)cut131,3430
void mc_info(const char* classname, size_t size, loaderFP loader)mc_info183,4776
void mc_info_h(const char* classname, size_t size, loaderFP loader, unsigned hashval)mc_info_h188,4901
void mc_clear(const char* classname, size_t size, loaderFP loader)mc_clear195,5167
void mc_clear_h(const char* classname, size_t size, loaderFP loader, unsigned hashval)mc_clear_h200,5294
mo mc_alloc(const char* classname, size_t size, loaderFP loader)mc_alloc215,5878
mo mc_alloc_h(const char* classname, size_t size, loaderFP loader, unsigned hashval)mc_alloc_h220,6010
void mc_dealloc(mc_object* aobject, int is_recycle)mc_dealloc246,6821

src/monkc_runtime/monkc.c,1679
static mc_hashtable* mc_global_classtable = nil;mc_global_classtable31,1540
void trylock_global_classtable()trylock_global_classtable33,1590
void unlock_global_classtable()unlock_global_classtable38,1672
unsigned _binding(mc_class* const aclass, const char* methodname, void* value)_binding47,1778
unsigned _binding_h(mc_class* const aclass, const char* methodname, void* value, unsigned hashval)_binding_h52,1927
unsigned _override(mc_class* const aclass, const char* methodname, void* value)_override69,2383
unsigned _override_h(mc_class* const aclass, const char* methodname, void* value, unsigned hashval)_override_h74,2534
mc_class* alloc_mc_class()alloc_mc_class95,3015
mc_class* init_mc_class(mc_class* const aclass, const size_t objsize)init_mc_class100,3092
mc_class* new_mc_class(const size_t objsize)new_mc_class117,3543
mc_class* _load(const char* name, size_t objsize, loaderFP loader)_load122,3643
mc_class* _load_h(const char* name, size_t objsize, loaderFP loader, unsigned hashval)_load_h127,3767
mo _new(mo const this, initerFP initer)_new153,4549
mo _new_category(mo const this, initerFP initer, loaderFP loader_cat, initerFP initer_cat)_new_category163,4734
void _shift(mo const obj, const char* modename, size_t objsize, loaderFP loader)_shift175,5019
void _shift_back(mo const obj)_shift_back186,5341
static int ref_count_down(mo const this)ref_count_down193,5499
void _recycle(mo const this)_recycle227,6320
void _release(mo const this)_release236,6470
mo _retain(mo const this)_retain245,6620
char* mc_nameof(mc_object* const aobject)mc_nameof272,7270
char* mc_nameofc(mc_class* const aclass)mc_nameofc281,7415

src/monkc_runtime/monkc.h,5980
#define __MCRuntime____MCRuntime__29,1508
#define MC_HASHTABLE_SIZE_L1 MC_HASHTABLE_SIZE_L147,2062
#define MC_HASHTABLE_SIZE_L2 MC_HASHTABLE_SIZE_L248,2095
#define MC_HASHTABLE_SIZE_L3 MC_HASHTABLE_SIZE_L349,2128
#define MC_HASHTABLE_SIZE_L4 MC_HASHTABLE_SIZE_L450,2162
#define MC_HASHTABLE_SIZE_L5 MC_HASHTABLE_SIZE_L551,2196
#define MC_STRICT_MODE MC_STRICT_MODE60,2443
#define nil nil70,2682
#define xxx xxx72,2712
#define S(S73,2734
#define SEQ(SEQ74,2758
#define A_B(A_B75,2812
typedef struct mc_hashitem_structmc_hashitem_struct77,2839
	struct mc_hashitem_struct* next;next79,2875
	unsigned hash;hash80,2909
	unsigned index;index81,2925
	unsigned level;level82,2942
	void* value;value83,2959
	char* key;key85,3003
}mc_hashitem;mc_hashitem86,3015
typedef struct mc_hashtable_structmc_hashtable_struct88,3030
	int lock;lock90,3067
	unsigned level;level91,3078
	unsigned count;count92,3095
	mc_hashitem* items[];items93,3112
}mc_hashtable;mc_hashtable94,3135
typedef struct mc_block_structmc_block_struct96,3151
	struct mc_block_struct* next;next98,3184
	void* data;data99,3215
}mc_block;mc_block100,3228
typedef struct mc_blockpool_structmc_blockpool_struct102,3240
	int lock;lock104,3277
	mc_block* tail;tail105,3288
}mc_blockpool;mc_blockpool106,3305
typedef struct mc_class_structmc_class_struct109,3378
	size_t objsize;objsize111,3411
	mc_hashtable* table;table112,3428
	mc_blockpool* free_pool;free_pool113,3450
	mc_blockpool* used_pool;used_pool114,3476
	mc_hashitem* item;item115,3502
}mc_class;mc_class116,3522
typedef struct mc_object_structmc_object_struct119,3587
	struct mc_object_struct* super;super121,3621
	mc_class* isa;isa122,3654
	mc_block* block;block123,3670
	int ref_count;ref_count124,3688
	mc_class* saved_isa;saved_isa125,3704
	mc_class* mode;mode126,3726
}mc_object;mc_object127,3743
typedef mc_object* mo;mo128,3755
#define monkc(monkc130,3779
#define end(end139,3952
#define implements(implements144,4096
#define extends(extends145,4125
typedef mc_class* (*loaderFP)(mc_class*);loaderFP148,4183
typedef mc_object* (*initerFP)(mc_object*);initerFP149,4225
#define loader(loader152,4282
#define initer(initer153,4349
#define binding(binding156,4425
#define override(override157,4503
#define hinding(hinding158,4582
#define hverride(hverride159,4671
#define method(method160,4762
#define protocol(protocol161,4872
#define varscope(varscope162,4992
#define var(var163,5058
#define cast(cast164,5111
#define newc(newc167,5172
#define new(new168,5309
#define hew(hew169,5434
#define new_category(new_category170,5535
#define hew_category(hew_category171,5667
#define clear(clear172,5811
#define hlear(hlear173,5878
#define info(info174,5958
#define hnfo(hnfo175,6036
#define callc(callc178,6144
#define call(call179,6257
#define response_to(response_to180,6361
#define hesponse_to(hesponse_to181,6427
#define ffc(ffc182,6505
#define ff(ff183,6627
#define fh(fh184,6741
#define fs(fs185,6854
#define shift(shift186,6943
#define shift_back(shift_back187,7023
#define REFCOUNT_NO_MM REFCOUNT_NO_MM212,8006
#define REFCOUNT_ERR REFCOUNT_ERR213,8033
#define recycle(recycle217,8144
#define release(release218,8183
#define retain(retain219,8222
#define nameof(nameof229,8573
#define nameofc(nameofc230,8612
#define deref(deref231,8649
#define addrof(addrof232,8673
int LOG_LEVEL;LOG_LEVEL238,8714
#define MC_SILENT MC_SILENT240,8730
#define MC_ERROR_ONLY MC_ERROR_ONLY241,8754
#define MC_DEBUG MC_DEBUG242,8778
#define MC_VERBOSE MC_VERBOSE243,8802
#define LOG_COLOR_NONE LOG_COLOR_NONE246,8851
#define LOG_COLOR_BLACK LOG_COLOR_BLACK247,8884
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY248,8921
#define LOG_COLOR_BLUE LOG_COLOR_BLUE249,8962
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE250,8998
#define LOG_COLOR_GREEN LOG_COLOR_GREEN251,9040
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN252,9077
#define LOG_COLOR_CYAN LOG_COLOR_CYAN253,9120
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN254,9156
#define LOG_COLOR_RED LOG_COLOR_RED255,9198
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED256,9233
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE257,9274
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE258,9312
#define LOG_COLOR_BROWN LOG_COLOR_BROWN259,9356
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW260,9393
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY261,9431
#define LOG_COLOR_WHITE LOG_COLOR_WHITE262,9473
#define LOG_FMT LOG_FMT263,9510
#define LOG_COLOR_NONE LOG_COLOR_NONE265,9546
#define LOG_COLOR_BLACK LOG_COLOR_BLACK266,9572
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY267,9599
#define LOG_COLOR_BLUE LOG_COLOR_BLUE268,9630
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE269,9656
#define LOG_COLOR_GREEN LOG_COLOR_GREEN270,9688
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN271,9715
#define LOG_COLOR_CYAN LOG_COLOR_CYAN272,9748
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN273,9774
#define LOG_COLOR_RED LOG_COLOR_RED274,9806
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED275,9831
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE276,9862
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE277,9890
#define LOG_COLOR_BROWN LOG_COLOR_BROWN278,9924
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW279,9951
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY280,9979
#define LOG_COLOR_WHITE LOG_COLOR_WHITE281,10011
#define LOG_FMT LOG_FMT282,10038
typedef struct mc_message_structmc_message_struct328,11673
    mo object;object330,11708
    const void* addr;addr331,11723
}mc_message, lamdafunc;mc_message332,11745
}mc_message, lamdafunc;lamdafunc332,11745
#define lamda(lamda334,11770
#define _lamda _lamda335,11810
#define MC_NO_NODE(MC_NO_NODE381,13603
#define MC_ONE_NODE(MC_ONE_NODE382,13648
#define MC_TWO_NODE(MC_TWO_NODE383,13708

src/monkc_runtime/monkc/monkc.h,5980
#define __MCRuntime____MCRuntime__29,1508
#define MC_HASHTABLE_SIZE_L1 MC_HASHTABLE_SIZE_L147,2062
#define MC_HASHTABLE_SIZE_L2 MC_HASHTABLE_SIZE_L248,2095
#define MC_HASHTABLE_SIZE_L3 MC_HASHTABLE_SIZE_L349,2128
#define MC_HASHTABLE_SIZE_L4 MC_HASHTABLE_SIZE_L450,2162
#define MC_HASHTABLE_SIZE_L5 MC_HASHTABLE_SIZE_L551,2196
#define MC_STRICT_MODE MC_STRICT_MODE60,2443
#define nil nil70,2682
#define xxx xxx72,2712
#define S(S73,2734
#define SEQ(SEQ74,2758
#define A_B(A_B75,2812
typedef struct mc_hashitem_structmc_hashitem_struct77,2839
	struct mc_hashitem_struct* next;next79,2875
	unsigned hash;hash80,2909
	unsigned index;index81,2925
	unsigned level;level82,2942
	void* value;value83,2959
	char* key;key85,3003
}mc_hashitem;mc_hashitem86,3015
typedef struct mc_hashtable_structmc_hashtable_struct88,3030
	int lock;lock90,3067
	unsigned level;level91,3078
	unsigned count;count92,3095
	mc_hashitem* items[];items93,3112
}mc_hashtable;mc_hashtable94,3135
typedef struct mc_block_structmc_block_struct96,3151
	struct mc_block_struct* next;next98,3184
	void* data;data99,3215
}mc_block;mc_block100,3228
typedef struct mc_blockpool_structmc_blockpool_struct102,3240
	int lock;lock104,3277
	mc_block* tail;tail105,3288
}mc_blockpool;mc_blockpool106,3305
typedef struct mc_class_structmc_class_struct109,3378
	size_t objsize;objsize111,3411
	mc_hashtable* table;table112,3428
	mc_blockpool* free_pool;free_pool113,3450
	mc_blockpool* used_pool;used_pool114,3476
	mc_hashitem* item;item115,3502
}mc_class;mc_class116,3522
typedef struct mc_object_structmc_object_struct119,3587
	struct mc_object_struct* super;super121,3621
	mc_class* isa;isa122,3654
	mc_block* block;block123,3670
	int ref_count;ref_count124,3688
	mc_class* saved_isa;saved_isa125,3704
	mc_class* mode;mode126,3726
}mc_object;mc_object127,3743
typedef mc_object* mo;mo128,3755
#define monkc(monkc130,3779
#define end(end139,3952
#define implements(implements144,4096
#define extends(extends145,4125
typedef mc_class* (*loaderFP)(mc_class*);loaderFP148,4183
typedef mc_object* (*initerFP)(mc_object*);initerFP149,4225
#define loader(loader152,4282
#define initer(initer153,4349
#define binding(binding156,4425
#define override(override157,4503
#define hinding(hinding158,4582
#define hverride(hverride159,4671
#define method(method160,4762
#define protocol(protocol161,4872
#define varscope(varscope162,4992
#define var(var163,5058
#define cast(cast164,5111
#define newc(newc167,5172
#define new(new168,5309
#define hew(hew169,5434
#define new_category(new_category170,5535
#define hew_category(hew_category171,5667
#define clear(clear172,5811
#define hlear(hlear173,5878
#define info(info174,5958
#define hnfo(hnfo175,6036
#define callc(callc178,6144
#define call(call179,6257
#define response_to(response_to180,6361
#define hesponse_to(hesponse_to181,6427
#define ffc(ffc182,6505
#define ff(ff183,6627
#define fh(fh184,6741
#define fs(fs185,6854
#define shift(shift186,6943
#define shift_back(shift_back187,7023
#define REFCOUNT_NO_MM REFCOUNT_NO_MM212,8006
#define REFCOUNT_ERR REFCOUNT_ERR213,8033
#define recycle(recycle217,8144
#define release(release218,8183
#define retain(retain219,8222
#define nameof(nameof229,8573
#define nameofc(nameofc230,8612
#define deref(deref231,8649
#define addrof(addrof232,8673
int LOG_LEVEL;LOG_LEVEL238,8714
#define MC_SILENT MC_SILENT240,8730
#define MC_ERROR_ONLY MC_ERROR_ONLY241,8754
#define MC_DEBUG MC_DEBUG242,8778
#define MC_VERBOSE MC_VERBOSE243,8802
#define LOG_COLOR_NONE LOG_COLOR_NONE246,8851
#define LOG_COLOR_BLACK LOG_COLOR_BLACK247,8884
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY248,8921
#define LOG_COLOR_BLUE LOG_COLOR_BLUE249,8962
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE250,8998
#define LOG_COLOR_GREEN LOG_COLOR_GREEN251,9040
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN252,9077
#define LOG_COLOR_CYAN LOG_COLOR_CYAN253,9120
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN254,9156
#define LOG_COLOR_RED LOG_COLOR_RED255,9198
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED256,9233
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE257,9274
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE258,9312
#define LOG_COLOR_BROWN LOG_COLOR_BROWN259,9356
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW260,9393
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY261,9431
#define LOG_COLOR_WHITE LOG_COLOR_WHITE262,9473
#define LOG_FMT LOG_FMT263,9510
#define LOG_COLOR_NONE LOG_COLOR_NONE265,9546
#define LOG_COLOR_BLACK LOG_COLOR_BLACK266,9572
#define LOG_COLOR_DARK_GRAY LOG_COLOR_DARK_GRAY267,9599
#define LOG_COLOR_BLUE LOG_COLOR_BLUE268,9630
#define LOG_COLOR_LIGHT_BLUE LOG_COLOR_LIGHT_BLUE269,9656
#define LOG_COLOR_GREEN LOG_COLOR_GREEN270,9688
#define LOG_COLOR_LIGHT_GREEN LOG_COLOR_LIGHT_GREEN271,9715
#define LOG_COLOR_CYAN LOG_COLOR_CYAN272,9748
#define LOG_COLOR_LIGHT_CYAN LOG_COLOR_LIGHT_CYAN273,9774
#define LOG_COLOR_RED LOG_COLOR_RED274,9806
#define LOG_COLOR_LIGHT_RED LOG_COLOR_LIGHT_RED275,9831
#define LOG_COLOR_PURPLE LOG_COLOR_PURPLE276,9862
#define LOG_COLOR_LIGHT_PURPLE LOG_COLOR_LIGHT_PURPLE277,9890
#define LOG_COLOR_BROWN LOG_COLOR_BROWN278,9924
#define LOG_COLOR_YELLOW LOG_COLOR_YELLOW279,9951
#define LOG_COLOR_LIGHT_GRAY LOG_COLOR_LIGHT_GRAY280,9979
#define LOG_COLOR_WHITE LOG_COLOR_WHITE281,10011
#define LOG_FMT LOG_FMT282,10038
typedef struct mc_message_structmc_message_struct328,11673
    mo object;object330,11708
    const void* addr;addr331,11723
}mc_message, lamdafunc;mc_message332,11745
}mc_message, lamdafunc;lamdafunc332,11745
#define lamda(lamda334,11770
#define _lamda _lamda335,11810
#define MC_NO_NODE(MC_NO_NODE381,13603
#define MC_ONE_NODE(MC_ONE_NODE382,13648
#define MC_TWO_NODE(MC_TWO_NODE383,13708

src/tests/Main.c,50
int main(int argc, char const *argv[])main7,130

src/tests/Makefile,323
SRCS = $(wildcard *.c)SRCS1,0
OBJS = $(patsubst %.c, %.o, $(SRCS))OBJS2,23
LINK_HEAD = -I/usr/local/include/monkc -I/usr/local/include/lemonteaLINK_HEAD4,61
LINK_BIN = -lpthread -L/usr/local/lib -lmonkc -llemonteaLINK_BIN5,130
CC = gcc -O -g -w -Wall -Wno-unused-variable -Wno-return-typeCC7,188
AS = asAS8,250

src/tests/TestMCClock.c,1175
static const char* LOG_TAG = "TestMCClock";LOG_TAG2,25
loader(TestMCClock)loader4,70
initer(TestMCClock)initer30,955
method(TestMCClock, void, setUp, xxx)method37,1048
method(TestMCClock, void, tearDown, xxx)method44,1187
method(TestMCClock, void, setTimeToNow, xxx)method51,1329
method(TestMCClock, void, setTime, xxx)method60,1569
method(TestMCClock, void, adjustTime, xxx)method69,1821
method(TestMCClock, void, setRawtime, xxx)method74,1870
method(TestMCClock, void, setRawtimeFields, xxx)method79,1919
method(TestMCClock, void, getTime, xxx)method84,1974
method(TestMCClock, void, getRawtime, xxx)method89,2020
method(TestMCClock, void, getTimeByString, xxx)method94,2069
method(TestMCClock, void, getCPUClocksPerSecond, xxx)method99,2123
method(TestMCClock, void, getCPUClocksSinceStart, xxx)method104,2183
method(TestMCClock, void, getCurrentTimeString, xxx)method109,2244
method(TestMCClock, void, getCurrentGMTTimeString, xxx)method114,2303
method(TestMCClock, void, printTime, xxx)method119,2365
method(TestMCClock, void, printCurrentTime, xxx)method124,2413
method(TestMCClock, void, printCurrentGMTTime, xxx)method129,2468

src/tests/TestMCClock.h,149
#define TestMCClock_TestMCClock_6,86
monkc(TestMCClock);TestMCClock8,108
	MCClock* toBeTest;toBeTest9,128
end(TestMCClock);TestMCClock10,148

src/tests/TestMCRuntime.c,1313
static const char* LOG_TAG = "TestMCRuntime";LOG_TAG2,27
loader(TestMCRuntimeMockObj)loader5,75
initer(TestMCRuntimeMockObj)initer17,586
method(TestMCRuntimeMockObj, void, test_double, double a, double b, double c)method24,653
method(TestMCRuntimeMockObj, void, test_float, float a, float b, float c)method29,799
method(TestMCRuntimeMockObj, void, test_double_string, double a, char* b)method34,940
method(TestMCRuntimeMockObj, void, test_float_string, float a, char* b)method39,1079
method(TestMCRuntimeMockObj, void, test_string_double, char* a, double b)method44,1218
method(TestMCRuntimeMockObj, void, test_string_float, char* a, float b)method49,1360
loader(TestMCRuntime)loader56,1520
initer(TestMCRuntime)initer70,2035
method(TestMCRuntime, void, setUp, xxx)method77,2141
method(TestMCRuntime, void, tearDown, xxx)method88,2393
method(TestMCRuntime, void, testArgument_float_all, xxx)method94,2511
method(TestMCRuntime, void, testArgument_double_all, xxx)method100,2673
method(TestMCRuntime, void, testArgument_double_string, xxx)method106,2838
method(TestMCRuntime, void, testArgument_float_string, xxx)method112,3037
method(TestMCRuntime, void, testArgument_string_double, xxx)method118,3232
method(TestMCRuntime, void, testArgument_string_float, xxx)method124,3432

src/tests/TestMCRuntime.h,345
#define TestMCRuntimeMockObj_TestMCRuntimeMockObj_6,105
monkc(TestMCRuntimeMockObj);TestMCRuntimeMockObj9,137
end(TestMCRuntimeMockObj);TestMCRuntimeMockObj10,166
#define TestMCRuntime_TestMCRuntime_22,676
monkc(TestMCRuntime);TestMCRuntime24,700
	TestMCRuntimeMockObj* mockobj;mockobj25,722
end(TestMCRuntime);TestMCRuntime26,754

src/tests/TestObjectManage.c,1135
static mc_blockpool* pool;pool3,31
static mc_block *b1, *b2, *b3, *b4, *b5, *b6, *tb;b14,58
static mc_block *b1, *b2, *b3, *b4, *b5, *b6, *tb;b24,58
static mc_block *b1, *b2, *b3, *b4, *b5, *b6, *tb;b34,58
static mc_block *b1, *b2, *b3, *b4, *b5, *b6, *tb;b44,58
static mc_block *b1, *b2, *b3, *b4, *b5, *b6, *tb;b54,58
static mc_block *b1, *b2, *b3, *b4, *b5, *b6, *tb;b64,58
static mc_block *b1, *b2, *b3, *b4, *b5, *b6, *tb;tb4,58
static mc_object *o1, *o2, *o3, *o4, *o5, *o6;o15,109
static mc_object *o1, *o2, *o3, *o4, *o5, *o6;o25,109
static mc_object *o1, *o2, *o3, *o4, *o5, *o6;o35,109
static mc_object *o1, *o2, *o3, *o4, *o5, *o6;o45,109
static mc_object *o1, *o2, *o3, *o4, *o5, *o6;o55,109
static mc_object *o1, *o2, *o3, *o4, *o5, *o6;o65,109
void test_bp_init()test_bp_init6,156
void test_bp_end()test_bp_end31,728
void test_getFromHead()test_getFromHead37,836
void test_cut_asc()test_cut_asc59,1365
void test_cut_dsc()test_cut_dsc87,2097
void test_cut_objasc()test_cut_objasc109,2625
void test_cut_objdsc()test_cut_objdsc140,3441
void test_blockpool()test_blockpool171,4257

src/tests/TestObjectManage.h,0

updatetags.sh,0
