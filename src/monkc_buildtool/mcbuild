#!/bin/sh
ROOT=$PWD

dumpBuild()
{
	echo 'MODULES = $(wildcard *.c)' > build/Makefile
	echo 'OBJS = $(patsubst %.c, %.o, $(MODULES))' >> build/Makefile
	echo 'LINK_HEAD = -I/usr/local/include/monkc -I/usr/local/include/lemontea' >> build/Makefile
	echo 'LINK_BIN = -lpthread -L/usr/local/lib -lmonkc -llemontea' >> build/Makefile
	echo 'FLAGS = -g -Wno-incompatible-pointer-types' >> build/Makefile
	echo 'AS = as' >> build/Makefile
	echo 'PP = mcpp' >> build/Makefile
	echo 'exec:$(OBJS)' >> build/Makefile
	echo '	$(CC) $(FLAGS) -o exec $(OBJS) $(LINK_BIN)' >> build/Makefile
	echo '%.o:%.c' >> build/Makefile
	echo '	$(PP) $< .hash' >> build/Makefile
	echo '	mv -f .hash $<' >> build/Makefile
	echo '	$(CC) $(FLAGS) -c $< $(LINK_HEAD)' >> build/Makefile
	echo 'clean:' >> build/Makefile
	echo '	rm -f exec $(OBJS) temp.* stream.txt core' >> build/Makefile
	echo 'dump:' >> build/Makefile
	echo '	ulimit -c unlimited' >> build/Makefile
}

if [ "$1" = "" ]
then
	echo "1.mcbuild -c(--create)         //create a project at current path"
	echo "2.mcbuild -s(--sync)           //sync src to build folder"
	echo "3.make -C build                //compile source in subfolder <build>"
fi
if [ "$1" = "--create" ] || [ "$1" = "-c" ]
then
	mkdir -p -v src
	mkdir -p -v build
	dumpBuild
	echo "1.[o] -c(--create)"
	echo "2.[x] -s(--sync)"
	echo "3.[x] make -C build"
fi
if [ "$1" = "--sync" ] || [ "$1" = "-s" ]
then
	rm -v -f build/*.h
	rm -v -f build/*.c
	cp -v -f $(find ./src -name '*.c') build
	cp -v -f $(find ./src -name '*.h') build
	echo "1.[o] -c(--create)"
	echo "2.[o] -s(--sync)"
	echo "3.[x] make -C build"
fi
