#!/bin/bash
ROOT=$PWD

ROOTMAKETMP="all:
\n\tcd ./build && make && cp exec ../
\nclean:
\n\tcd ./build && make clean"

MAKEFLIETMP="MODULES = \$(wildcard *.c)
\nOBJS = \$(patsubst %.c, %.o, \$(MODULES))                             
\nLINK_HEAD = -I/usr/local/include/monkc -I/usr/local/include/lemontea    
\nLINK_BIN = -lpthread -L/usr/local/lib -lmonkc -llemontea                                                                    
\nCC = clang -g -w -Wall -Wno-unused-variable -Wno-return-type             
\nAS = as
\nLEX = mcpp                                                                 
\nexec:\$(OBJS)\n\t\$(CC) -o exec \$(OBJS) \$(LINK_BIN)                                  
\n%.o:%.c
\n\t\$(LEX) \$< .hash
\n\tmv -f .hash \$<
\n\t\$(CC) -c \$< \$(LINK_HEAD)                                             
\nclean:\n\trm -f exec \$(OBJS) temp.* stream.txt core                            
\ndump:\n\tulimit -c unlimited"

if [ "$1" = "" ]
then
	echo "mcbuild -create			//create a project at current path"
	echo "mcbuild -build 			//build a project"
	echo "mcbuild -clean            //clean a project"
fi
if [ "$1" = "-create" ]
then
	echo "create a project"
	mkdir -p -v build
	mkdir -p -v src
	echo -e $ROOTMAKETMP > Makefile	
	echo -e $MAKEFLIETMP > build/Makefile
fi
if [ "$1" = "-build" ]
then
	echo "CLEAN AND BUILD..."
	rm -r build	
	mkdir -p -v build
	echo -e $ROOTMAKETMP > Makefile	
	echo -e $MAKEFLIETMP > build/Makefile
	cp $(find ./src -name '*.c') ./build
	cp $(find ./src -name '*.h') ./build
	cp $(find ./src -name '*.p') ./build
	make
fi
if [ "$1" = "-clean" ]
then
	echo "CLEAN..."
	rm exec core
	rm -r build	
	mkdir -p -v build
	echo -e $ROOTMAKETMP > Makefile	
	echo -e $MAKEFLIETMP > build/Makefile
fi
